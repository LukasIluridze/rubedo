{
  "version": 3,
  "sources": ["../src/config/moderation.ts", "../src/config/objectives.ts", "../src/modules/models/BlockInventory.ts", "../src/index.ts", "../src/lib/Database/Database.ts", "../src/lang/text.ts", "../src/lib/Database/utils.ts", "../src/config/database.ts", "../src/lib/Scheduling/Timeout.ts", "../src/lib/Scheduling/utils.ts", "../src/lib/Commands/index.ts", "../src/config/commands.ts", "../src/lib/Commands/Callback.ts", "../src/lib/Commands/utils.ts", "../src/lib/Commands/OptionTypes.ts", "../src/lib/Commands/Options.ts", "../src/lib/Commands/Command.ts", "../src/lib/Chest GUI/index.ts", "../src/config/chest.ts", "../src/lib/Chest GUI/Models/ChestGUI.ts", "../src/lib/Chest GUI/pages.ts", "../src/lib/Chest GUI/Models/FillTypes.ts", "../src/lib/Chest GUI/Models/Page.ts", "../src/lib/Chest GUI/Models/ItemGrabbedCallback.ts", "../src/lib/Chest GUI/utils.ts", "../src/lib/Chest GUI/Models/Item.ts", "../src/lib/Chest GUI/Models/Buttons.ts", "../src/lib/Chest GUI/static_pages.ts", "../src/utils.ts", "../src/config/staff.ts", "../src/config/region.ts", "../src/modules/models/Region.ts", "../src/modules/models/Ban.ts", "../src/modules/commands/ban.ts", "../src/config/enchantments.ts", "../src/modules/commands/config.ts", "../src/modules/commands/database.ts", "../src/modules/commands/ecwipe.ts", "../src/modules/models/Freeze.ts", "../src/modules/commands/freeze.ts", "../src/modules/commands/help.ts", "../src/modules/models/Mute.ts", "../src/modules/commands/mute.ts", "../src/modules/commands/npc.ts", "../src/modules/commands/ping.ts", "../src/modules/commands/region.ts", "../src/modules/commands/role.ts", "../src/modules/commands/spectate.ts", "../src/modules/commands/unban.ts", "../src/modules/commands/unfreeze.ts", "../src/modules/commands/unmute.ts", "../src/config/app.ts", "../src/modules/commands/version.ts", "../src/modules/managers/ban.ts", "../src/modules/managers/freeze.ts", "../src/modules/managers/mute.ts", "../src/modules/managers/region.ts", "../src/modules/managers/playerJoin.ts"],
  "sourcesContent": ["/**\n * This is a list of items that are banned from holding\n */\nexport const BANNED_ITEMS = [\n  \"minecraft:beehive\",\n  \"minecraft:beenest\",\n  \"minecraft:acacia_standing_sign\",\n  \"minecraft:acacia_wall_sign\",\n  \"minecraft:agent_spawn_egg\",\n  \"minecraft:allay_spawn_egg\",\n  \"minecraft:allow\",\n  \"minecraft:axolotl_bucket\",\n  \"minecraft:axolotl_spawn_egg\",\n  \"minecraft:balloon\",\n  \"minecraft:bamboo_sapling\",\n  \"minecraft:barrier\",\n  \"minecraft:barrier\",\n  \"minecraft:bat_spawn_egg\",\n  \"minecraft:bedrock\",\n  \"minecraft:bee_nest\",\n  \"minecraft:bee_spawn_egg\",\n  \"minecraft:beehive\",\n  \"minecraft:birch_standing_sign\",\n  \"minecraft:birch_wall_sign\",\n  \"minecraft:blackstone_double_slab\",\n  \"minecraft:blaze_spawn_egg\",\n  \"minecraft:border_block\",\n  \"minecraft:brewingstandblock\",\n  \"minecraft:bubble_column\",\n  \"minecraft:camera\",\n  \"minecraft:carrots\",\n  \"minecraft:cat_spawn_egg\",\n  \"minecraft:cave_spider_spawn_egg\",\n  \"minecraft:cave_vines\",\n  \"minecraft:cave_vines_body_with_berries\",\n  \"minecraft:chain_command_block\",\n  \"minecraft:chemical_heat\",\n  \"minecraft:chemistry_table\",\n  \"minecraft:chicken_spawn_egg\",\n  \"minecraft:client_request_placeholder_block\",\n  \"minecraft:cobbled_deepslate_double_slab\",\n  \"minecraft:cod_bucket\",\n  \"minecraft:cod_spawn_egg\",\n  \"minecraft:colored_torch\",\n  \"minecraft:colored_torch_bp\",\n  \"minecraft:colored_torch_rg\",\n  \"minecraft:command_block\",\n  \"minecraft:command_block_minecart\",\n  \"minecraft:compound\",\n  \"minecraft:compoundcreator\",\n  \"minecraft:cow_spawn_egg\",\n  \"minecraft:creeper_spawn_egg\",\n  \"minecraft:crimson_double_slab\",\n  \"minecraft:crimson_standing_sign\",\n  \"minecraft:crimson_wall_sign\",\n  \"minecraft:darkoak_standing_sign\",\n  \"minecraft:darkoak_wall_sign\",\n  \"minecraft:daylight_detector_inverted\",\n  \"minecraft:debug_stick\",\n  \"minecraft:deepslate_brick_double_slab\",\n  \"minecraft:deepslate_tile_double_slab\",\n  \"minecraft:deny\",\n  \"minecraft:dolphin_spawn_egg\",\n  \"minecraft:donkey_spawn_egg\",\n  \"minecraft:double_cut_copper_slab\",\n  \"minecraft:double_wooden_slab\",\n  \"minecraft:drowned_spawn_egg\",\n  \"minecraft:elder_guardian_spawn_egg\",\n  \"minecraft:end_gateway\",\n  \"minecraft:end_portal\",\n  \"minecraft:end_portal_frame\",\n  \"minecraft:enderman_spawn_egg\",\n  \"minecraft:endermite_spawn_egg\",\n  \"minecraft:evoker_spawn_egg\",\n  \"minecraft:exposed_double_cut_copper_slab\",\n  \"minecraft:fire\",\n  \"minecraft:flowing_lava\",\n  \"minecraft:flowing_water\",\n  \"minecraft:fox_spawn_egg\",\n  \"minecraft:frog_spawn_egg\",\n  \"minecraft:frosted_ice\",\n  \"minecraft:ghast_spawn_egg\",\n  \"minecraft:glow_squid_spawn_egg\",\n  \"minecraft:glow_stick\",\n  \"minecraft:glowingobsidian\",\n  \"minecraft:goat_spawn_egg\",\n  \"minecraft:guardian_spawn_egg\",\n  \"minecraft:hard_glass\",\n  \"minecraft:hard_glass_pane\",\n  \"minecraft:hard_stained_glass\",\n  \"minecraft:hard_stained_glass_pane\",\n  \"minecraft:hoglin_spawn_egg\",\n  \"minecraft:horse_spawn_egg\",\n  \"minecraft:husk_spawn_egg\",\n  \"minecraft:ice_bomb\",\n  \"minecraft:info_update\",\n  \"minecraft:info_update2\",\n  \"minecraft:invisible_bedrock\",\n  \"minecraft:invisiblebedrock\",\n  \"minecraft:item.acacia_door\",\n  \"minecraft:item.bed\",\n  \"minecraft:item.beetroot\",\n  \"minecraft:item.birch_door\",\n  \"minecraft:item.cake\",\n  \"minecraft:item.campfire\",\n  \"minecraft:item.cauldron\",\n  \"minecraft:item.chain\",\n  \"minecraft:item.crimson_door\",\n  \"minecraft:item.dark_oak_door\",\n  \"minecraft:item.flower_pot\",\n  \"minecraft:item.frame\",\n  \"minecraft:item.glow_frame\",\n  \"minecraft:item.hopper\",\n  \"minecraft:item.iron_door\",\n  \"minecraft:item.jungle_door\",\n  \"minecraft:item.kelp\",\n  \"minecraft:item.nether_sprouts\",\n  \"minecraft:item.nether_wart\",\n  \"minecraft:item.reeds\",\n  \"minecraft:item.skull\",\n  \"minecraft:item.soul_campfire\",\n  \"minecraft:item.spruce_door\",\n  \"minecraft:item.warped_door\",\n  \"minecraft:item.wheat\",\n  \"minecraft:item.wooden_door\",\n  \"minecraft:jigsaw\",\n  \"minecraft:jungle_standing_sign\",\n  \"minecraft:jungle_wall_sign\",\n  \"minecraft:lava\",\n  \"minecraft:lava_cauldron\",\n  \"minecraft:light_block\",\n  \"minecraft:lit_blast_furnace\",\n  \"minecraft:lit_deepslate_redstone_ore\",\n  \"minecraft:lit_furnace\",\n  \"minecraft:lit_redstone_lamp\",\n  \"minecraft:lit_redstone_ore\",\n  \"minecraft:lit_smoker\",\n  \"minecraft:llama_spawn_egg\",\n  \"minecraft:magma_cube_spawn_egg\",\n  \"minecraft:medicine\",\n  \"minecraft:melon_stem\",\n  \"minecraft:mob_spawner\",\n  \"minecraft:mooshroom_spawn_egg\",\n  \"minecraft:movingBlock\",\n  \"minecraft:moving_block\",\n  \"minecraft:movingblock\",\n  \"minecraft:mule_spawn_egg\",\n  \"minecraft:netherreactor\",\n  \"minecraft:npc_spawn\",\n  \"minecraft:npc_spawn_egg\",\n  \"minecraft:ocelot_spawn_egg\",\n  \"minecraft:oxidized_double_cut_copper_slab\",\n  \"minecraft:panda_spawn_egg\",\n  \"minecraft:parrot_spawn_egg\",\n  \"minecraft:phantom_spawn_egg\",\n  \"minecraft:pig_spawn_egg\",\n  \"minecraft:piglin_brute_spawn_egg\",\n  \"minecraft:piglin_spawn_egg\",\n  \"minecraft:pillager_spawn_egg\",\n  \"minecraft:piston_arm_collision\",\n  \"minecraft:piston_arm_collision\",\n  \"minecraft:pistonarmcollision\",\n  \"minecraft:polar_bear_spawn_egg\",\n  \"minecraft:polished_blackstone_brick_double_slab\",\n  \"minecraft:polished_blackstone_double_slab\",\n  \"minecraft:polished_deepslate_double_slab\",\n  \"minecraft:portal\",\n  \"minecraft:potatoes\",\n  \"minecraft:powder_snow\",\n  \"minecraft:powder_snow_bucket\",\n  \"minecraft:powered_comparator\",\n  \"minecraft:powered_repeater\",\n  \"minecraft:pufferfish_bucket\",\n  \"minecraft:pufferfish_spawn_egg\",\n  \"minecraft:pumpkin_stem\",\n  \"minecraft:rabbit_spawn_egg\",\n  \"minecraft:rapid_fertilizer\",\n  \"minecraft:ravager_spawn_egg\",\n  \"minecraft:real_double_stone_slab\",\n  \"minecraft:real_double_stone_slab2\",\n  \"minecraft:real_double_stone_slab3\",\n  \"minecraft:real_double_stone_slab4\",\n  \"minecraft:redstone_wire\",\n  \"minecraft:repeating_command_block\",\n  \"minecraft:reserved3\",\n  \"minecraft:reserved4\",\n  \"minecraft:reserved6\",\n  \"minecraft:salmon_bucket\",\n  \"minecraft:salmon_spawn_egg\",\n  \"minecraft:sea_turtle_spawn_egg\",\n  \"minecraft:sheep_spawn_egg\",\n  \"minecraft:shulker_spawn_egg\",\n  \"minecraft:silverfish_spawn_egg\",\n  \"minecraft:skeleton_horse_spawn_egg\",\n  \"minecraft:skeleton_spawn_egg\",\n  \"minecraft:slime_spawn_egg\",\n  \"minecraft:soul_fire\",\n  \"minecraft:soul_fire\",\n  \"minecraft:sparkler\",\n  \"minecraft:spawn_egg\",\n  \"minecraft:spawn_egg\",\n  \"minecraft:spawner\",\n  \"minecraft:spider_spawn_egg\",\n  \"minecraft:spruce_standing_sign\",\n  \"minecraft:spruce_wall_sign\",\n  \"minecraft:squid_spawn_egg\",\n  \"minecraft:standing_banner\",\n  \"minecraft:standing_sign\",\n  \"minecraft:stickyPistonArmCollision\",\n  \"minecraft:sticky_piston_arm_collision\",\n  \"minecraft:stonecutter\",\n  \"minecraft:stray_spawn_egg\",\n  \"minecraft:strider_spawn_egg\",\n  \"minecraft:structure_block\",\n  \"minecraft:structure_void\",\n  \"minecraft:tadpole_bucket\",\n  \"minecraft:tadpole_spawn_egg\",\n  \"minecraft:tripwire\",\n  \"minecraft:tropical_fish_bucket\",\n  \"minecraft:tropical_fish_spawn_egg\",\n  \"minecraft:underwater_torch\",\n  \"minecraft:unknown\",\n  \"minecraft:unlit_redstone_ore\",\n  \"minecraft:unpowered_comparator\",\n  \"minecraft:unpowered_repeater\",\n  \"minecraft:vex_spawn_egg\",\n  \"minecraft:villager_spawn_egg\",\n  \"minecraft:vindicator_spawn_egg\",\n  \"minecraft:wall_banner\",\n  \"minecraft:wall_sign\",\n  \"minecraft:wandering_trader_spawn_egg\",\n  \"minecraft:warden_spawn_egg\",\n  \"minecraft:warped_double_slab\",\n  \"minecraft:warped_standing_sign\",\n  \"minecraft:warped_wall_sign\",\n  \"minecraft:water\",\n  \"minecraft:waxed_double_cut_copper_slab\",\n  \"minecraft:waxed_exposed_double_cut_copper_slab\",\n  \"minecraft:waxed_oxidized_double_cut_copper_slab\",\n  \"minecraft:waxed_weathered_double_cut_copper_slab\",\n  \"minecraft:weathered_double_cut_copper_slab\",\n  \"minecraft:witch_spawn_egg\",\n  \"minecraft:wither_spawn_egg\",\n  \"minecraft:wolf_spawn_egg\",\n  \"minecraft:zoglin_spawn_egg\",\n  \"minecraft:zombie_horse_spawn_egg\",\n  \"minecraft:zombie_spawn_egg\",\n  \"minecraft:zombie_villager_spawn_egg\",\n  \"minecraft:zombified_piglin_spawn_egg\",\n];\n\n/**\n * List of blocks that cannot be placed down\n */\nexport const BANNED_BLOCKS = [\n  \"minecraft:moving_block\",\n  \"minecraft:beehive\",\n  \"minecraft:beenest\",\n];\n\n/**\n * A List of all containers a item could be in\n */\nexport const BLOCK_CONTAINERS = [\n  \"minecraft:chest\",\n  //\"minecraft:barrel\",\n  \"minecraft:trapped_chest\",\n  //\"minecraft:dispenser\",\n  //\"minecraft:dropper\",\n  //\"minecraft:furnace\",\n  //\"minecraft:blast_furnace\",\n  //\"minecraft:lit_furnace\",\n  //\"minecraft:lit_blast_furnace\",\n  //\"minecraft:hopper\",\n  //\"minecraft:shulker_box\",\n  //\"minecraft:undyed_shulker_box\",\n];\n\n/**\n * The block size to check for blockContainers\n */\nexport const CHECK_SIZE = { x: 7, y: 7, z: 7 };\n", "/*\n|--------------------------------------------------------------------------\n| Objectives\n|--------------------------------------------------------------------------\n|\n| This is a list of all objectives this pack uses\n| please add any objective to this list so it can be added at world creation\n| make sure to add them beofre sending pack to others and new worlds.\n|\n*/\nexport const OBJECTIVES = [\n  {\n    objective: \"STAFF_DB\",\n    displayName: null as string,\n  },\n];\n", "import { BlockInventoryComponentContainer, ItemStack } from \"mojang-minecraft\";\n\nexport class BlockInventory {\n  emptySlotsCount: number;\n  size: number;\n  items: Array<ItemStack>;\n  /**\n   * Coverts a blockInventoryComponentContainer and saves it\n   * @param {BlockInventoryComponentContainer} inventory\n   */\n  constructor(inventory: BlockInventoryComponentContainer) {\n    this.emptySlotsCount = inventory.emptySlotsCount;\n    this.size = inventory.size;\n    this.items = [];\n    for (let i = 0; i < this.size; i++) {\n      this.items[i] = inventory.getItem(i);\n    }\n  }\n\n  /**\n   * Loads this inventory onto a BlockInventoryComponentContainer\n   * @param {BlockInventoryComponentContainer} block block to load on\n   */\n  load(block: BlockInventoryComponentContainer) {\n    for (let i = 0; i < block.size; i++) {\n      if (!this.items[i]) continue;\n      block.setItem(i, this.items[i]);\n    }\n  }\n}\n", "console.warn(`LOADING RUBEDO, START MS: ${Date.now()}`);\n\nimport { BLOCK_CONTAINERS, CHECK_SIZE } from \"./config/moderation\";\nimport { OBJECTIVES } from \"./config/objectives\";\nimport { BlockInventory } from \"./modules/models/BlockInventory\";\nimport {\n  BlockLocation,\n  Events,\n  ItemStack,\n  Location,\n  MinecraftItemTypes,\n  world,\n} from \"mojang-minecraft\";\nimport { Database } from \"./lib/Database/Database\";\nimport { setTickInterval } from \"./lib/Scheduling/utils\";\nimport \"./lib/Commands/index\";\nimport \"./lib/Chest GUI/index\";\nimport \"./modules/commands/import\";\nimport \"./modules/managers/import\";\n\ninterface ITables {\n  [key: string]: Database;\n}\n\n/**\n * All the Database tables that are created\n */\nexport const TABLES: ITables = {\n  config: new Database(\"config\"),\n  freezes: new Database(\"freezes\"),\n  mutes: new Database(\"mutes\"),\n  bans: new Database(\"bans\"),\n  regions: new Database(\"regions\"),\n  permissions: new Database(\"permissions\"),\n};\n\ninterface IContainerLocation {\n  [key: string]: BlockInventory;\n}\n/**\n * storage of all container locations in the world\n */\nexport let CONTAINER_LOCATIONS: IContainerLocation = {};\n\n/**\n * Stores npc locations that are verified to allow npcs to spawn in\n */\nexport let NPC_LOCATIONS: Array<Location> = [];\n\n/**\n * This is air as a item,\n */\nexport const AIR = new ItemStack(MinecraftItemTypes.stick, 0);\n\n/**\n * Converts a location to a block location\n */\nfunction locationToBlockLocation(loc: Location): BlockLocation {\n  return new BlockLocation(\n    Math.floor(loc.x),\n    Math.floor(loc.y),\n    Math.floor(loc.z)\n  );\n}\n\nsetTickInterval(() => {\n  CONTAINER_LOCATIONS = {};\n  for (const player of world.getPlayers()) {\n    const blockLoc = locationToBlockLocation(player.location);\n    const pos1 = blockLoc.offset(CHECK_SIZE.x, CHECK_SIZE.y, CHECK_SIZE.z);\n    const pos2 = blockLoc.offset(-CHECK_SIZE.x, -CHECK_SIZE.y, -CHECK_SIZE.z);\n\n    for (const location of pos1.blocksBetween(pos2)) {\n      if (location.y < -64) continue;\n      const block = player.dimension.getBlock(location);\n      if (!BLOCK_CONTAINERS.includes(block.id)) continue;\n      CONTAINER_LOCATIONS[JSON.stringify(location)] = new BlockInventory(\n        block.getComponent(\"inventory\").container\n      );\n    }\n  }\n}, 100);\n\nfor (const objective of OBJECTIVES) {\n  try {\n    world.scoreboard.addObjective(\n      objective.objective,\n      objective.displayName ?? objective.objective\n    );\n  } catch (error) {}\n}", "import { world } from \"mojang-minecraft\";\nimport { text } from \"../../lang/text.js\";\nimport { binaryToText, chunkString, runCommand, textToBinary } from \"./utils\";\nimport { MAX_DATABASE_STRING_SIZE } from \"../../config/database\";\n\n/**\n * Minecraft Bedrock Gametest Database\n * @license MIT\n * @author Smell of curry\n * @version 1.0.0\n * --------------------------------------------------------------------------\n * This database stores data on players inside a objective\n * Each objective can only store 32768 string data inside its players\n * So we split up the save and save it across chunks in multiple objectives\n * --------------------------------------------------------------------------\n */\n\ninterface IMemory {\n  index: number;\n  data: string;\n}\n\nexport class Database {\n  TABLE_NAME: string;\n  MEMORY: IMemory[];\n  /**\n   * Creates a new database\n   */\n  constructor(TABLE_NAME: string) {\n    if (!/^([a-zA-Z]{1,16})$/.test(TABLE_NAME))\n      throw new Error(text[\"api.database.error.table_name\"](TABLE_NAME, 16));\n    this.TABLE_NAME = TABLE_NAME;\n    this.MEMORY = [];\n    this.build();\n    this.fetch();\n  }\n\n  /**\n   * This grabs all the data from the database every time the world is loaded\n   */\n  fetch() {\n    try {\n      for (let i = 0; i <= this.SAVE_NAMES; i++) {\n        const name = `${this.INDEX}_${i}`;\n        const regex = new RegExp(`(?<=${name}\\\\()[0-1\\\\s]+(?=\\\\))`);\n        const RAW_TABLE_DATA = this.SCOREBOARD_DATA.match(regex)[0];\n        this.MEMORY.push({ index: i, data: `${RAW_TABLE_DATA}` });\n      }\n    } catch (error) {\n      this.MEMORY = [{ index: 0, data: \"01111011 01111101\" }];\n    }\n  }\n\n  /**\n   * This builds the database and make sure the database is set\n   */\n  build(objective: string = this.TABLE_NAME) {\n    runCommand(`scoreboard objectives add \"DB_GLOBAL\" dummy`);\n    runCommand(`scoreboard objectives add ${objective} dummy`);\n    runCommand(`scoreboard players add \"DB_SAVE\" ${objective} 0`);\n    runCommand(`scoreboard players add \"DB_INDEXS\" \"DB_GLOBAL\" 0`);\n  }\n\n  /**\n   * Wipes this database and clears all its data\n   */\n  wipe() {\n    this.MEMORY = [];\n    for (let i = 0; i <= this.SAVE_NAMES; i++) {\n      const name = `${this.INDEX}_${i}`;\n      runCommand(`scoreboard objectives remove ${name}`);\n    }\n    runCommand(`scoreboard objectives remove ${this.TABLE_NAME}`);\n    this.build();\n  }\n\n  /**\n   * Grabs all scoreboard data on the world\n   */\n  get SCOREBOARD_DATA(): string {\n    return world.getDimension(\"overworld\").runCommand(`scoreboard players list`)\n      .statusMessage;\n  }\n\n  /**\n   * Gets the ammount of saves on this database\n   */\n  get SAVE_NAMES() {\n    try {\n      const command = world\n        .getDimension(\"overworld\")\n        .runCommand(\n          `scoreboard players test \"DB_SAVE\" \"${this.TABLE_NAME}\" * *`\n        );\n      return parseInt(command.statusMessage.split(\" \")[1]);\n    } catch (error) {\n      return 0;\n    }\n  }\n\n  /**\n   * Sets the ammount of saves for this database\n   */\n  set SAVE_NAMES(value) {\n    world\n      .getDimension(\"overworld\")\n      .runCommand(\n        `scoreboard players set \"DB_SAVE\" \"${this.TABLE_NAME}\" ${value}`\n      );\n  }\n\n  /**\n   * Grabs the index of this database to be used for string conversion\n   */\n  get INDEX(): number | null {\n    try {\n      const command = world\n        .getDimension(\"overworld\")\n        .runCommand(\n          `scoreboard players test \"${this.TABLE_NAME}\" \"DB_GLOBAL\" * *`\n        );\n      return parseInt(command.statusMessage.split(\" \")[1]);\n    } catch (error) {\n      let index = null;\n      try {\n        const command = world\n          .getDimension(\"overworld\")\n          .runCommand(`scoreboard players test DB_INDEXS \"DB_GLOBAL\" * *`);\n        index = parseInt(command.statusMessage.split(\" \")[1]) + 1;\n      } catch (error) {\n        index = 0;\n      }\n      world\n        .getDimension(\"overworld\")\n        .runCommand(`scoreboard players set DB_INDEXS \"DB_GLOBAL\" ${index}`);\n      this.INDEX = index;\n      return index;\n    }\n  }\n\n  /**\n   * Sets the DB index this is used as small string convesion for the tablename\n   */\n  set INDEX(value) {\n    world\n      .getDimension(\"overworld\")\n      .runCommand(\n        `scoreboard players set \"${this.TABLE_NAME}\" \"DB_GLOBAL\" ${value}`\n      );\n  }\n\n  /**\n   * Gets the database from the world\n   * @returns {Object}\n   */\n  get data() {\n    try {\n      const data = this.MEMORY.map((a) => binaryToText(a.data));\n      return JSON.parse(data.join(\"\"));\n    } catch (error) {\n      return {};\n    }\n  }\n\n  /**\n   * Saves local memory data to database\n   */\n  save(json: Object) {\n    const SPLIT_DATA = chunkString(\n      JSON.stringify(json),\n      MAX_DATABASE_STRING_SIZE\n    );\n    this.wipe();\n    for (const [index, chunk] of SPLIT_DATA.entries()) {\n      const name = `${this.INDEX}_${index}`;\n      this.SAVE_NAMES = index;\n      const data = textToBinary(chunk);\n      this.MEMORY.push({\n        index: index,\n        data: data,\n      });\n      runCommand(`scoreboard objectives add ${name} dummy`);\n      runCommand(`scoreboard players set \"${name}(${data})\" ${name} 0`);\n    }\n  }\n\n  /**\n   * Returns a value of a key\n   */\n  get(key: string): any | null {\n    const data = this.data;\n    return data[key];\n  }\n\n  /**\n   * Sets a value into the database\n   */\n  set(key: string, value: any) {\n    let data = this.data;\n    data[key] = value;\n    this.save(data);\n  }\n\n  /**\n   * Check if the key exists in the table\n   * @example Database.has('Test Key');\n   */\n  has(key: string): boolean {\n    return this.keys().includes(key);\n  }\n\n  /**\n   * Delete the key from the table\n   * @example Database.delete('Test Key');\n   */\n  delete(key: string): boolean {\n    let json = this.data;\n    const status = delete json[key];\n    this.save(json);\n    return status;\n  }\n\n  /**\n   * Returns the number of key/value pairs in the Map object.\n   * @example Database.size()\n   */\n  size() {\n    return this.keys().length;\n  }\n\n  /**\n   * Clear everything in the table\n   * @example Database.clear()\n   */\n  clear() {\n    this.save({});\n  }\n\n  /**\n   * Get all the keys in the table\n   * @example Database.keys();\n   */\n  keys(): string[] {\n    return Object.keys(this.data);\n  }\n\n  /**\n   * Get all the values in the table\n   * @example Database.values();\n   */\n  values(): any[] {\n    return Object.values(this.data);\n  }\n\n  /**\n   * Gets all the keys and values\n   * @example Database.getCollection();\n   */\n  getCollection(): Object {\n    return this.data;\n  }\n}\n", "export const text = {\n  \"api.name\": () => \"Smelly API\",\n  \"api.error.unknown\": () => \"An unknown error has occured.\",\n  \"api.database.error.table_name\": (a: string, b: number) =>\n    `The display name ${a} is too long for an objective, it can be at most ${b} characters long`,\n  \"api.utilities.formatter.error.ms\": (a: string) =>\n    `${a} is not a string or a number`,\n  \"api.Providers.form.invaildtype\": (a: string, b: string) =>\n    `Type ${a} is not a vaild type to add a ${b}`,\n  \"api.Providers.form.invaildFormtype\": (a: string, b: string) => {\n    `The type ${a} is not a valid type, Vaild types: ${JSON.stringify(b)}`;\n  },\n  \"api.ChestGUI.error.pagenotfound\": (a: string) => `Page ${a} not found!`,\n  \"modules.protections.cps.clickingToFast\": () =>\n    `You are clicking to fast! Please click slower!`,\n  \"modules.managers.mute.isMuted\": () =>\n    `You are muted and cannot send messages please try again later`,\n  \"modules.commands.ban.reply\": (\n    playerName: string,\n    length: string,\n    unit: string,\n    reason: string\n  ) =>\n    `\u00A7cBanned \u00A7f\"\u00A7a${playerName}\u00A7f\" \u00A7cfor ${length} ${unit} Because: \"${\n      reason ?? \"No reason Provided\"\n    }\" \u00A7aSuccessfully`,\n};\n", "import { world } from \"mojang-minecraft\";\n\n/**\n * Splits a string into chunk sizes\n */\nexport function chunkString(str: string, length: number): string[] {\n  return str.match(new RegExp(\".{1,\" + length + \"}\", \"g\"));\n}\n\n/**\n * Runs a Command\n * @example runCommand(`say test`)\n */\nexport function runCommand(command: string, dimension: string = \"overworld\") {\n  try {\n    world.getDimension(dimension).runCommand(command);\n  } catch (error) {}\n}\n\n/**\n * Convert string to binary\n */\nexport function textToBinary(text: string): string {\n  return text\n    .split(\"\")\n    .map((char) => {\n      return char.charCodeAt(0).toString(2);\n    })\n    .join(\" \");\n}\n/**\n * Convert binary to string\n */\nexport function binaryToText(binary: string): string {\n  return binary\n    .split(\" \")\n    .map((char) => {\n      return String.fromCharCode(parseInt(char, 2));\n    })\n    .join(\"\");\n}\n", "import { BlockLocation, world } from \"mojang-minecraft\";\n\n/*\n|--------------------------------------------------------------------------\n| Max Databse string size\n|--------------------------------------------------------------------------\n|\n| Here is the max database save size meaing when a save gets made\n| it tests the size of that save and splits up the save depending on this\n| Size. Its releated to minecrafts 32k bit limit.\n|\n*/\nexport const MAX_DATABASE_STRING_SIZE = 32000;\n\n/*\n|--------------------------------------------------------------------------\n| Data regex\n|--------------------------------------------------------------------------\n|\n| This is the regex to extract data from the data storage template\n|\n*/\nexport const DATA_REGEX = /(?<=\\|\\d*\\|)(.*)/;\n\n/*\n|--------------------------------------------------------------------------\n| Entity Id\n|--------------------------------------------------------------------------\n|\n| This is the entity id of the database this is what stores the information\n| of the database on its nameTag\n|\n*/\nexport const ENTITY_ID = \"rubedo:database\";\n\n/*\n|--------------------------------------------------------------------------\n| Entity Spawn Dimension\n|--------------------------------------------------------------------------\n|\n| This is the dimension where the database entitys are located\n|\n*/\nexport const ENTITY_SPAWN_DIMENSION = world.getDimension(\"overworld\");\n\n/*\n|--------------------------------------------------------------------------\n| Entity Spawn Location\n|--------------------------------------------------------------------------\n|\n| This is the spawn location of the database entitys there will be\n| Multiple entitys at this location for each chunk\n|\n*/\nexport const ENTITY_SPAWN_LOCATION = new BlockLocation(0, -64, 0);\n", "import { TickEvent, world } from \"mojang-minecraft\";\n\n/**\n * A list of timeouts that are occuring\n * @type {Map<string, Timeout>}\n */\nconst TIMEOUTS = new Map();\n\nexport class Timeout {\n  callbackTick: number | null;\n  tickDelay: number;\n  loop: boolean;\n  callback: (tick: number) => void;\n  id: any;\n  TickCallBack: (arg: TickEvent) => void;\n  /**\n   * Register a timeout\n   * @param {() => void} callback On timeout complete code to be executed\n   * @param {number} tick tick of the timeout\n   */\n  constructor(\n    callback: (tick: number) => void,\n    tick: number,\n    loop: boolean = false,\n    id: any = Date.now()\n  ) {\n    this.callbackTick = null;\n    this.tickDelay = tick;\n    this.loop = loop;\n    this.callback = callback;\n    this.id = id;\n\n    TIMEOUTS.set(id, this);\n\n    this.TickCallBack = world.events.tick.subscribe(({ currentTick }) => {\n      if (!this.callbackTick) this.callbackTick = currentTick + this.tickDelay;\n      if (this.callbackTick > currentTick) return;\n      this.callback(currentTick);\n\n      if (!this.loop) return this.expire();\n      this.callbackTick = currentTick + this.tickDelay;\n    });\n  }\n\n  /**\n   * Expires this tickTimeout\n   */\n  expire() {\n    world.events.tick.unsubscribe(this.TickCallBack);\n    TIMEOUTS.delete(this.id);\n  }\n}\n", "import { Timeout } from \"./Timeout\";\n\n/**\n * Sleeps your code\n * @param {number} tick time in ticks you want the return to occur\n * @returns {Promise<void>}\n */\nexport const sleep = (tick: number): Promise<void> => {\n  return new Promise((resolve) => setTickTimeout(resolve, tick));\n};\n\n/**\n * Register a tick timeout\n * @param callback Code you want to execute when the command is executed\n * @param tick time in ticks you want the return to occur\n */\nexport function setTickTimeout(callback: () => void, tick: number) {\n  new Timeout(callback, tick);\n}\n\n/**\n * Delay executing a function, REPEATEDLY\n */\nexport function setTickInterval(\n  callback: (tick: number) => void,\n  tick: number\n): any {\n  return new Timeout(callback, tick, true);\n}\n\n/**\n * Clears a interval\n */\nexport function clearTickInterval(callback: Timeout) {\n  callback.expire();\n}\n", "import { world } from \"mojang-minecraft\";\nimport { PREFIX } from \"../../config/commands\";\nimport { Command, getChatAugments, getChatCommand } from \"./Command\";\n\nexport const COMMAND_PATHS: Array<Command> = [];\n\nworld.events.beforeChat.subscribe((data) => {\n  try {\n    if (!data.message.startsWith(PREFIX)) return;\n    data.cancel = true;\n    let args = getChatAugments(data);\n    const command = getChatCommand(data);\n    if (!command || !command.callback)\n      // @ts-ignore\n      return data.sender.tell({\n        translate: `commands.generic.unknown`,\n        with: [`\u00A7f${args[0]}\u00A7c`],\n      });\n    if (\n      !command.tags.every((tag) => data.sender.hasTag(tag)) ||\n      !command.hasPermission(data.sender)\n    )\n      return data.sender.tell(`You do not have permission to use this command`);\n    args.shift();\n    args = args.filter((el) => !command.path.includes(el)); // removes command and subcommands from path\n    for (let [index, option] of command.options.entries()) {\n      if (option.type == \"location\") {\n        // @ts-ignore\n        if (option.x.verify(args[index])) {\n          // @ts-ignore\n          if (args?.[index + 1] && option.y.verify(args[index + 1])) {\n            // @ts-ignore\n            if (args?.[index + 2] && option.z.verify(args[index + 2])) {\n              continue;\n            } else {\n              index += 2;\n            }\n          } else {\n            index += 1;\n          }\n        }\n      } else {\n        // @ts-ignore\n        if (option.verify(args[index])) continue;\n      }\n      if (option.optional) break;\n      // @ts-ignore\n      return data.sender.tell({\n        translate: `commands.generic.syntax`,\n        with: [\n          `${PREFIX}${command.path.join(\" \")} ${args\n            .slice(0, index)\n            .join(\" \")}`,\n          args[index],\n          args.slice(index + 1).join(\" \"),\n        ],\n      });\n    }\n    command.sendCallback(data, args);\n  } catch (error) {\n    console.warn(`${error} : ${error.stack}`);\n    data.cancel = false;\n  }\n});\n", "/*\n|--------------------------------------------------------------------------\n| Command Prefix\n|--------------------------------------------------------------------------\n|\n| This is the prefix of the commands that are send in chat\n| changing this changes what people have to type in before using\n| a command for instance: -help. (-) is the command prefix.\n|\n*/\nexport const PREFIX = \"-\";\n", "import {\n  BeforeChatEvent,\n  InventoryComponentContainer,\n  ItemStack,\n  Player,\n} from \"mojang-minecraft\";\n\nexport class CommandCallback {\n  data: BeforeChatEvent;\n  args: Array<string>;\n  sender: Player;\n  /**\n   * Returns a commands callback\n   * @param data chat data that was used\n   * @param args aguments used this will exclude command name and subcommand name\n   * @param options same object names as input\n   * @example new CommandCallback(BeforeChatEvent, [\"2\", \"sd\"], [\"size\"])\n   */\n  constructor(data: BeforeChatEvent, args: Array<string>) {\n    this.data = data;\n    this.args = args;\n    this.sender = data.sender;\n  }\n  /**\n   * Replys to the sender of a command callback\n   * @param text Message or a lang code\n   * @example ctx.reply('Hello World!');\n   */\n  reply(text: string) {\n    this.sender.tell(text);\n  }\n  /**\n   * Runs a command on player\n   * @param command Message or a lang code\n   * @example ctx.run('say hey');\n   */\n  run(command: string) {\n    try {\n      this.sender.runCommand(command);\n    } catch (error) {}\n  }\n  /**\n   * Replys to the sender that a error has occured\n   * @param arg Parameter that was invalid\n   * @example ctx.invalidArg('player');\n   */\n  invalidArg(arg: string) {\n    // @ts-ignore\n    this.sender.tell({\n      translate: `commands.generic.parameter.invalid`,\n      with: [arg],\n    });\n  }\n  /**\n   * Replys to the sender that a error has occured\n   * @example ctx.invalidPermission();\n   */\n  invalidPermission() {\n    // @ts-ignore\n    this.sender.tell({\n      translate: `commands.generic.permission.selector`,\n    });\n  }\n  /**\n   * Gives the sender a item\n   * @param item Item to give\n   * @example ctx.give(ItemStack);\n   */\n  give(item: ItemStack) {\n    const inventory = this.sender.getComponent(\"minecraft:inventory\").container;\n    inventory.addItem(item);\n  }\n}\n", "import { BlockLocation, Player, world } from \"mojang-minecraft\";\n\n/**\n * Returns a location of the inputed aguments\n * @example parseLocationAugs([\"~1\", \"3\", \"^7\"], { location: [1,2,3] , viewVector: [1,2,3] })\n */\nexport function parseLocationAugs(\n  [x, y, z]: [x: string, y: string, z: string],\n  { location, viewVector }: { location: number[]; viewVector: number[] }\n): BlockLocation {\n  if (!x || !y || !x) return null;\n  const a = [x, y, z].map((arg) => {\n    const r = parseInt(arg.replace(/\\D/g, \"\"));\n    return isNaN(r) ? 0 : r;\n  });\n  const b = [x, y, z].map((arg, index) => {\n    return arg.includes(\"~\")\n      ? a[index] + location[index]\n      : arg.includes(\"^\")\n      ? a[index] + viewVector[index]\n      : a[index];\n  });\n  return new BlockLocation(b[0], b[1], b[2]);\n}\n\n/**\n * Fetch an online players data\n */\nexport function fetch(playerName: string): Player | null {\n  return [...world.getPlayers()].find((plr) => plr.name === playerName);\n}\n", "import { fetch } from \"./utils.js\";\n\nclass DefaultType {\n  /**\n   * The Fail message for the value\n   */\n  static fail = \"commands.generic.parameter.invalid\";\n  /**\n   * Validates a argument\n   */\n  static validate = (value: string) => value && value != \"\";\n  /**\n   * Parses a argument\n   */\n  static parse = (value: string) => value;\n}\n\nclass IntegerOption {\n  static fail = \"commands.generic.num.invalid\";\n  static validate = (value: any) => !isNaN(value);\n  static parse = (value: string) => parseInt(value);\n}\n\nclass FloatOption {\n  static fail = IntegerOption.fail;\n  static validate = (value: any) => value?.match(/^\\d+\\.\\d+$/)?.[0];\n  static parse = (value: string) => parseFloat(value);\n}\n\nclass LocationOption {\n  static fail = IntegerOption.fail;\n  static validate = (value: any) =>\n    value?.match(/^([\\~\\^]{1})?([-]?\\d*)$/)?.[0];\n  static parse = (value: string) => value;\n}\n\nclass BooleanOption {\n  static fail = \"commands.generic.boolean.invalid\";\n  static validate = (value: any) => value?.match(/^(true|false)$/)?.[0];\n  static parse = (value: string) => (value == \"true\" ? true : false);\n}\n\nclass PlayerOption {\n  static fail = \"commands.generic.player.notFound\";\n  static validate = (value: any) => (fetch(value) ? true : false);\n  static parse = (value: string) => fetch(value);\n}\n\nclass TargetOption {\n  static fail = \"commands.generic.player.notFound\";\n  static validate = (value: any) => value?.match(/^(@.|\"[\\s\\S]+\")$/)?.[0];\n  static parse = (value: string) => value;\n}\n\nclass ArrayOption {\n  static fail = \"commands.generic.parameter.invalid\";\n  static validate = (value: any, types: any[]) => types.includes(value);\n  static parse = (value: string) => value;\n}\n\nexport const OptionTypes = {\n  string: DefaultType,\n  int: IntegerOption,\n  float: FloatOption,\n  location: LocationOption,\n  boolean: BooleanOption,\n  player: PlayerOption,\n  target: TargetOption,\n  array: ArrayOption,\n};\n", "import { Location } from \"mojang-minecraft\";\nimport { OptionTypes } from \"./OptionTypes.js\";\n\nexport class CommandOption {\n  name: string;\n  type: string | Array<any>;\n  description?: string;\n  optional?: boolean;\n  /**\n   * Registers a command option\n   * @example new CommandOption(\"name\",DefaultType,\"the name of this\", false)\n   */\n  constructor(\n    name: string,\n    type: string | Array<any>,\n    description: string,\n    optional: boolean = false\n  ) {\n    this.name = name;\n    this.type = type;\n    this.description = description;\n    this.optional = optional;\n  }\n  /**\n   * Verifys the string to see if it meets the critera of the type\n   * @param {string} value\n   * @returns {Boolean}\n   */\n  verify(value: string): boolean {\n    if (Array.isArray(this.type)) return OptionTypes.array.validate(value, this.type);\n    // @ts-ignore\n    return OptionTypes[this.type].validate(value);\n  }\n  /**\n   * Validates the arg and returns the parsed value\n   * @param {string} value\n   * @returns {number | Location | boolean | string}\n   */\n  validate(value: string): number | Location | boolean | string {\n    if (Array.isArray(this.type)) return value;\n    // @ts-ignore\n    return OptionTypes[this.type].parse(value);\n  }\n}\n", "import { BeforeChatEvent, Player } from \"mojang-minecraft\";\nimport { PREFIX } from \"../../config/commands.js\";\nimport { CommandCallback } from \"./Callback.js\";\nimport { COMMAND_PATHS } from \"./index.js\";\nimport { CommandOption } from \"./Options.js\";\nimport { parseLocationAugs } from \"./utils.js\";\n//import { parseLocationAugs } from \"./utils.js\";\n\ninterface ICmds {\n  [key: string]: Command;\n}\n\ninterface ICommandInfo {\n  /**\n   * name of the command\n   */\n  name: string;\n  /**\n   * description of the command\n   */\n  description?: string;\n  /**\n   * other names for the command\n   */\n  aliases?: string[];\n  /**\n   * required tags to use command\n   */\n  tags?: string[];\n  /**\n   * a function that verifys this player can use this command\n   */\n  hasPermission?: (player: Player) => Boolean;\n  /**\n   * a path of all the command it runs through [\"maincommand\", \"firstsubcommand\", \"second subcommand\"]\n   */\n  path?: string[];\n  /**\n   * A list of permissions the sender must have to run this command\n   */\n  permissions?: string[];\n}\n\ninterface ISubCommandInfo {\n  /**\n   * name of the command\n   */\n  name: string;\n  /**\n   * description of the command\n   */\n  description?: string;\n  /**\n   * required tags to use command\n   */\n  tags?: string[];\n  /**\n   * a function that verifys this player can use this command\n   */\n  hasPermission?: (player: Player) => Boolean;\n}\n\ninterface ICommandOptions {\n  name: string;\n  type: string | Array<any>;\n  description?: string;\n  optional?: boolean;\n  x?: CommandOption;\n  y?: CommandOption;\n  z?: CommandOption;\n}\n\n/**\n * if no has permission was set this will run to verify the player has permission\n * @param player player to check\n */\nexport const DEFAULT_HAS_PERMISSION = (player: Player): boolean => true;\n\n/**\n * Returns the acuall command that was used\n * @param {BeforeChatEvent} data chat data that was used\n * @returns {Command}\n * @example this.getChatCommand(BeforeChatEvent)\n */\nexport function getChatCommand(data: BeforeChatEvent): Command {\n  const args = getChatAugments(data);\n  let checker = (arr: string[], target: string[]) =>\n    target.every((v, index) => v === arr[index]);\n  let command: Command = null;\n  const cmds: ICmds = {};\n  for (const command of COMMAND_PATHS) {\n    cmds[command.path.toString()] = command;\n    for (const aliase of command.aliases) {\n      let p = [...command.path];\n      p[0] = aliase;\n      cmds[p.toString()] = command;\n    }\n    if (command.path.length > 1) {\n      const a = COMMAND_PATHS.find((cmd) => cmd.name == command.path[0]);\n      for (const aliase of a.aliases) {\n        let p = [...command.path];\n        p[0] = aliase;\n        cmds[p.toString()] = command;\n      }\n    }\n  }\n  for (let [path, cmd] of Object.entries(cmds)) {\n    // @ts-ignore\n    const pathA: Array<string> = path.split(\",\");\n    if (checker(args, pathA)) command = cmd;\n  }\n  return command;\n}\n\n/**\n * Returns a Before chat events augments\n * @example this.getChatAugments(BeforeChatEvent)\n */\nexport function getChatAugments(data: BeforeChatEvent): Array<string> {\n  return data.message\n    .slice(PREFIX.length)\n    .trim()\n    .match(/\"[^\"]+\"|[^\\s]+/g)\n    .map((e) => e.replace(/\"(.+)\"/, \"$1\").toString());\n}\n\nexport class Command {\n  name: string;\n  description: string;\n  tags: string[];\n  hasPermission: (player: Player) => Boolean;\n  path: Array<string>;\n  aliases: Array<string>;\n  permissions: string[];\n  options: Array<ICommandOptions | CommandOption>;\n  callback: (ctx: CommandCallback, options: Object) => void;\n  /**\n   * Register a command\n   * @param callback Code you want to execute when the command is executed\n   * @example new CommandBuilder({ name: \"good\", description: \"subcommand for worldedit\" }, callback)\n   */\n  constructor(\n    CommandInfo: ICommandInfo,\n    callback?: (ctx: CommandCallback, options: Object) => void\n  ) {\n    this.name = CommandInfo.name.toString().toLowerCase();\n    this.description = CommandInfo.description;\n    this.aliases = CommandInfo.aliases ?? [];\n    this.tags = CommandInfo.tags ?? [];\n    this.hasPermission = CommandInfo.hasPermission ?? DEFAULT_HAS_PERMISSION;\n    this.path = CommandInfo.path ?? [this.name];\n    this.permissions = CommandInfo.permissions ?? [];\n    this.options = [];\n    this.callback = callback;\n\n    // adds a new path to the stored global paths\n    COMMAND_PATHS.push(this);\n  }\n  /**\n   * Register a subCommand for this command\n   * @example command.addSubCommand({ name: \"good\", description: \"subcommand for worldedit\" }, callback)\n   */\n  addSubCommand(\n    SubCommandInfo: ISubCommandInfo,\n    callback?: (ctx: CommandCallback, options: Object) => void\n  ): Command {\n    const newPath = [...this.path];\n    newPath.push(SubCommandInfo.name);\n    const subCommand = new Command(\n      {\n        name: SubCommandInfo.name,\n        description: SubCommandInfo.description,\n        tags: SubCommandInfo.tags,\n        hasPermission: SubCommandInfo.hasPermission,\n        path: newPath,\n      },\n      callback\n    );\n    return subCommand;\n  }\n\n  /**\n   * Registers a Usage option for a command\n   * @param name name of the option\n   * @param type type number of option type\n   * @param description description of the option\n   * @param optional tells to script to allow the sender to not input this command\n   * @returns {Command}\n   * @example command.addOption(\"amount\", \"int\",  \"The amount of items to drop\")\n   */\n  addOption(\n    name: string,\n    type: string | Array<any>,\n    description: string,\n    optional: boolean = false\n  ): Command {\n    if (type == \"location\") {\n      this.options.push({\n        name: name,\n        type: \"location\",\n        description: description,\n        optional: optional,\n        x: new CommandOption(`x${Date.now()}`, type, description, optional),\n        y: new CommandOption(`y${Date.now()}`, type, description, optional),\n        z: new CommandOption(`z${Date.now()}`, type, description, optional),\n      });\n      return this;\n    }\n    this.options.push(new CommandOption(name, type, description, optional));\n    return this;\n  }\n  /**\n   * Returns a commands name\n   * @example this.getName()\n   */\n  getName(): string {\n    return this.name;\n  }\n  /**\n   * Returns a commands callback\n   * @param data chat data that was used\n   * @param args aguments used this will exclude command name and subcommand name\n   * @example this.sendCallback(BeforeChatEvent, [\"2\", \"sd\"])\n   */\n  sendCallback(data: BeforeChatEvent, args: string[]) {\n    if (!this.callback) return;\n    const options: { [key: string]: any } = {};\n    for (const [i, option] of this.options.entries()) {\n      if (option.type == \"location\") {\n        options[option.name] = parseLocationAugs(\n          [args[i], args[i + 1], args[i + 2]],\n          {\n            location: [\n              data.sender.location.x,\n              data.sender.location.y,\n              data.sender.location.z,\n            ],\n            viewVector: [\n              data.sender.viewVector.x,\n              data.sender.viewVector.y,\n              data.sender.viewVector.z,\n            ],\n          }\n        );\n        continue;\n      }\n      // @ts-ignore\n      options[option.name] = option.validate(args[i]);\n    }\n    this.callback(new CommandCallback(data, args), options);\n  }\n  /**\n   * Registers a callback\n   * @param callback Code you want to execute when the command is executed\n   * @example executes((ctx) => {})\n   */\n  executes(callback: (ctx: CommandCallback, options: Object) => void): Command {\n    this.callback = callback;\n    return this;\n  }\n}\n", "import { EntityHealthComponent, world } from \"mojang-minecraft\";\nimport { GUI_ITEM } from \"../../config/chest.js\";\nimport { ChestGUI, CURRENT_GUIS } from \"./Models/ChestGUI.js\";\nimport { getHeldItem } from \"./utils.js\";\nimport \"./static_pages.js\";\nimport { forEachValidPlayer, getRole } from \"../../utils.js\";\n\n/*\n|--------------------------------------------------------------------------\n| Player to Chest GUI Manager\n|--------------------------------------------------------------------------\n|\n| This system makes sure a player always has a chest GUI when they have the\n| GUI_ITEM out this is a very important script because without this\n| the chest GUI would not spawn or despawn when moved\n|\n*/\nworld.events.tick.subscribe(() => {\n  for (const player of world.getPlayers()) {\n    if (getRole(player) != \"admin\") continue;\n    if (getHeldItem(player)?.id != GUI_ITEM) return;\n    let PLAYERS_GUI = CURRENT_GUIS[player.name];\n    if (!PLAYERS_GUI) CURRENT_GUIS[player.name] = new ChestGUI(player);\n  }\n});\n\n/*\n|--------------------------------------------------------------------------\n| Chest GUI Page Manager\n|--------------------------------------------------------------------------\n|\n| This system checks all GUIS in the world, it checks for changes\n| in the inventory and if it finds one it will run the onSlotChange function\n| also this helps with moving the entitys and killing the inactive ones\n|\n*/\nworld.events.tick.subscribe(() => {\n  for (const gui of Object.values(CURRENT_GUIS)) {\n    if (!gui.entity?.id) continue;\n    try {\n      const health = gui.entity.getComponent(\"minecraft:health\");\n      if (health.current <= 0) return gui.kill();\n    } catch (error) {\n      gui.kill();\n    }\n    if (getHeldItem(gui.player)?.id != GUI_ITEM) return gui.kill();\n    if (!gui.player) return gui.kill();\n\n    gui.entity.teleport(gui.player.location, gui.player.dimension, 0, 0);\n  }\n});\n", "/*\n|--------------------------------------------------------------------------\n| Gui item\n|--------------------------------------------------------------------------\n|\n| This is the GUI item that is used to open up the gui\n| this is set to the identifer of item.json and is used to find the item\n| in the gui template\n|\n*/\nexport const GUI_ITEM = \"rubedo:gui\";\n\n/*\n|--------------------------------------------------------------------------\n| Entity Inventory\n|--------------------------------------------------------------------------\n|\n| The id of the entity inventory\n| this is found in the entities file\n| this will be updated if inventory entity is changed\n|\n*/\nexport const ENTITY_INVENTORY = \"rubedo:inventory\";\n\n/*\n|--------------------------------------------------------------------------\n| Default Static Page id\n|--------------------------------------------------------------------------\n|\n| This is the default static page id of what is open by default\n| when you click on the gui, this can be changed but it probably shouldnt\n| because static pages will need to be changed\n|\n*/\nexport const DEFAULT_STATIC_PAGE_ID = \"home\";\n", "import { Entity, Events, ItemStack, Player, world } from \"mojang-minecraft\";\nimport { getItemUid, ISlot, Page } from \"./Page.js\";\nimport {\n  DEFAULT_STATIC_PAGE_ID,\n  ENTITY_INVENTORY,\n} from \"../../../config/chest.js\";\nimport { ItemGrabbedCallback } from \"./ItemGrabbedCallback.js\";\nimport { clearPlayersPointer, getEntitys, getItemAtSlot } from \"../utils.js\";\nimport { text } from \"../../../lang/text.js\";\nimport { PAGES } from \"../pages.js\";\n\nexport interface ISlotChangeReturn {\n  /**\n   * Slot that changed\n   */\n  slot: number;\n  /**\n   * the item that was grabbed / put\n   */\n  item: ItemStack;\n}\n\ninterface IMappedInventoryItem {\n  /**\n   * a unique id for a itemStack\n   */\n  uid: string;\n  /**\n   * the item\n   */\n  item: ItemStack;\n}\n\ninterface ICurrentGUIS {\n  [key: string]: ChestGUI;\n}\n\ninterface IEvents {\n  [key: string]: any;\n}\n\n/**\n * This is a object showing players chestGUI to entity\n */\nexport const CURRENT_GUIS: ICurrentGUIS = {};\n\nexport class ChestGUI {\n  player: Player;\n  playersName: string;\n  entity: Entity;\n  previousMap: Array<IMappedInventoryItem>;\n  /**\n   * If the player has a container open menaing this is open\n   */\n  HAS_CONTAINER_OPEN: boolean;\n  pageHistory: Array<string>;\n  /**\n   * Random data that can be passed to a fillType\n   */\n  extras: Object;\n  page: Page;\n  loops: Array<Function>;\n  events: IEvents;\n\n  /**\n   * Gets a inventory's coresponding gui\n   */\n  static getEntitysGuiInstance(entity: Entity | null) {\n    return Object.values(CURRENT_GUIS).find((gui) => gui.entity == entity);\n  }\n  /**\n   * Finds and returns a slot change in a inventory\n   * @returns {SlotChangeReturn | null}\n   */\n  static getSlotChange(\n    oldInv: Array<IMappedInventoryItem>,\n    newInv: Array<IMappedInventoryItem>\n  ): ISlotChangeReturn | null {\n    if (oldInv.length != newInv.length) return null;\n    for (let i = 0; i < oldInv.length; i++) {\n      if (oldInv[i].uid != newInv[i].uid)\n        return { slot: i, item: oldInv[i].item };\n    }\n    return null;\n  }\n\n  /**\n   * Creates a new chestGUI and assigns it to a player\n   * @param player the player this chestGUI is asigned to\n   * @param entity entity to use if undefined will create one\n   */\n  constructor(player: Player, entity?: Entity) {\n    this.player = player;\n    this.playersName = player.name;\n    this.entity = entity;\n    this.previousMap = null;\n    this.HAS_CONTAINER_OPEN = false;\n    this.pageHistory = [];\n    /**\n     * Random data that can be passed to a fillType\n     * @type {Object}\n     */\n    this.extras = null;\n    /**\n     * @type {Page}\n     */\n    this.page = null;\n    /**\n     * @type {Array<function()>}\n     */\n    this.loops = [];\n    if (!this.entity) this.summon();\n\n    this.events = {\n      tick: world.events.tick.subscribe(() => {\n        try {\n          if (!this.HAS_CONTAINER_OPEN) return;\n          if (!this.previousMap) return;\n          /**\n           * Runs each Loop Callback fot this current page\n           */\n          for (const loop of this.loops) {\n            loop();\n          }\n          /**\n           * Trys to find a change in the page\n           * @type {SlotChangeReturn | null}\n           */\n          const change = ChestGUI.getSlotChange(\n            this.previousMap,\n            this.mapInventory\n          );\n          if (change == null) return;\n          this.onSlotChange(change);\n        } catch (error) {\n          console.warn(error + error.stack);\n        }\n      }),\n      playerLeave: world.events.playerLeave.subscribe(({ playerName }) => {\n        if (playerName != this.playersName) return;\n        this.kill();\n      }),\n      beforeDataDrivenEntityTriggerEvent:\n        world.events.beforeDataDrivenEntityTriggerEvent.subscribe((data) => {\n          if (\n            ![\n              \"rubedo:has_container_open\",\n              \"rubedo:dosent_have_container_open\",\n            ].includes(data.id)\n          )\n            return;\n          if (data.entity.nameTag != this.player.nameTag) return;\n          if (data.id == \"rubedo:has_container_open\")\n            return (this.HAS_CONTAINER_OPEN = true);\n          this.HAS_CONTAINER_OPEN = false;\n        }),\n    };\n\n    CURRENT_GUIS[this.playersName] = this;\n  }\n\n  /**\n   * This spawns a chest GUI entity and sets the this.entity\n   */\n  summon() {\n    try {\n      getEntitys(ENTITY_INVENTORY)\n        ?.find((e) => e.getTags().includes(`id:${this.playersName}`))\n        ?.triggerEvent(\"despawn\");\n      let e = world.events.entityCreate.subscribe((data) => {\n        if (data.entity?.id == ENTITY_INVENTORY) {\n          this.entity = data.entity;\n          this.entity.addTag(`id:${this.playersName}`);\n          this.setPage(DEFAULT_STATIC_PAGE_ID);\n        }\n        world.events.entityCreate.unsubscribe(e);\n      });\n      this.player.triggerEvent(\"rubedo:spawn_inventory\");\n    } catch (error) {\n      console.warn(error + error.stack);\n    }\n  }\n\n  /**\n   * Reloads this chect GUI\n   */\n  reload() {\n    this.entity.triggerEvent(\"despawn\");\n    this.summon();\n  }\n\n  /**\n   * Kills this chestGUI and removes all events\n   */\n  kill() {\n    try {\n      this.entity?.triggerEvent(\"despawn\");\n    } catch (error) {}\n    for (const key in this.events) {\n      world.events[key as keyof Events].unsubscribe(this.events[key]);\n    }\n    delete CURRENT_GUIS[this.playersName];\n  }\n\n  /**\n   * Sets a container to specific page\n   * @param id page number its the index of const PAGES\n   * @param extras stuff that needs to be passed into this page\n   */\n  setPage(id: string, extras?: any) {\n    /**\n     * Stores the current extras for this page\n     */\n    this.extras = extras;\n    /**\n     * Adds this page to the page history\n     */\n    this.pageHistory.push(id);\n    /**\n     * Resets loops because page changed\n     */\n    this.loops = [];\n    const page = PAGES[id];\n    if (!page)\n      return new Error(\n        text[\"api.ChestGUI.error.pagenotfound\"](id ?? \"Undefined\")\n      );\n    page.fillType(this.entity, page, extras);\n\n    this.page = page;\n    this.previousMap = this.mapInventory;\n    this.entity.nameTag = `size:${page.size}` ?? \"size:27\";\n    // entity.triggerEvent(`size:${page.size}`);\n  }\n\n  /**\n   * Gets a entitys inventory but with mapped data\n   */\n  get mapInventory(): Array<IMappedInventoryItem> {\n    let container = this.entity.getComponent(\"inventory\").container;\n    let inventory = [];\n\n    for (let i = 0; i < container.size; i++) {\n      let currentItem = container.getItem(i);\n\n      inventory.push({\n        uid: getItemUid(currentItem),\n        item: currentItem,\n      });\n    }\n\n    this.previousMap = inventory;\n    return inventory;\n  }\n\n  /**\n   * This runs when a slot gets changed in the chest inventory\n   */\n  onSlotChange(change: ISlotChangeReturn) {\n    /**\n     * The guiItem that was changed\n     * @type {import(\"./Page.js\").Slot}\n     */\n    const slot = this.page.slots[change.slot];\n\n    if (!slot) {\n      // item was added to page that is not a valid slot so set that slot back to air\n      this.entity.runCommand(\n        `replaceitem entity @s slot.inventory ${change.slot} air`\n      );\n    } else {\n      // item was taken from this page\n      if (slot.item) clearPlayersPointer(this.player, slot.item);\n      /**\n       * if the slot has a item that returns when something is grabbed, this checks\n       * if there is a item put into the slot to return, if not it will not send a\n       * callback by returning before\n       */\n      if (!slot.item && !getItemAtSlot(this.entity, change.slot)) return;\n      this.runItemAction(slot, change);\n    }\n\n    this.previousMap = this.mapInventory;\n  }\n\n  /**\n   * Runs a item action when its grabbed out of a container\n   */\n  runItemAction(slot: ISlot, change: ISlotChangeReturn) {\n    if (!slot.action) return;\n    slot.action(new ItemGrabbedCallback(this, slot, change));\n  }\n\n  /**\n   * Registers a Loop to run every tick while the current page is still showing\n   */\n  registerLoop(callback: Function) {\n    this.loops.push(callback);\n  }\n}\n", "import { Page } from \"./Models/Page\";\n\ninterface IPAGES { \n    [key: string]: Page\n}\n\nexport const PAGES: IPAGES = {};\n", "import { Entity, InventoryComponentContainer } from \"mojang-minecraft\";\nimport { AIR } from \"../../../index.js\";\nimport { Page } from \"./Page.js\";\n\nexport type FillTypeCallback = (\n  entity: Entity,\n  page: Page,\n  extras: any\n) => void;\n\n/**\n * Fills a entity with desired itmes\n */\nexport function DefaultFill(entity: Entity, page: Page, extras: any) {\n  const container = entity.getComponent(\"minecraft:inventory\").container;\n  for (let i = 0; i < container.size; i++) {\n    const slot = page.slots[i];\n    if (!slot || !slot.item) {\n      container.setItem(i, AIR);\n      continue;\n    }\n    container.setItem(i, slot.item.setComponents());\n  }\n}\n", "import { Entity, ItemStack } from \"mojang-minecraft\";\nimport { PAGES } from \"../pages.js\";\nimport { BackButton, CloseGuiButton } from \"./Buttons.js\";\nimport { DefaultFill, FillTypeCallback } from \"./FillTypes\";\nimport { Item } from \"./Item\";\nimport { ItemGrabbedCallback } from \"./ItemGrabbedCallback\";\n\nexport interface ISlot {\n  /**\n   * the Item in this slot\n   */\n  item: Item;\n  /**\n   * the that runs when item is grabbed\n   */\n  action: (callback: ItemGrabbedCallback) => void;\n}\n\n/**\n * Converts a itemStack to a unique id\n */\nexport function getItemUid(item: ItemStack): string {\n  let uid = \"\";\n  if (item) {\n    let { id, nameTag, amount, data } = item;\n    uid = [id, nameTag, amount, data].join(\"\");\n  }\n  return uid;\n}\n\nexport class Page {\n  fillType: FillTypeCallback;\n  size: number;\n  slots: Array<ISlot>;\n  id: string;\n  extras: any;\n\n  /**\n   * Creats a new page\n   * @param {string} id the unique id of this page\n   * @param {number} size the size of the GUI\n   * @param {function(Entity, Page, any)} fillType how this page fills\n   */\n  constructor(\n    id: string,\n    size: number,\n    fillType: FillTypeCallback = DefaultFill\n  ) {\n    if (size % 9 != 0) throw new Error(\"Size needs to be in a increment of 9\");\n    if (PAGES[id]) throw new Error(`Id of ${id} Already exsists`);\n    this.id = id;\n    this.size = size;\n    this.slots = Array(this.size);\n    this.fillType = fillType;\n    PAGES[id] = this;\n  }\n  /**\n   * Adds a item to the page\n   */\n  setSlots(\n    slot: Array<number>,\n    item: Item,\n    action: (ctx: ItemGrabbedCallback) => void\n  ): Page {\n    const data = item ? { item: item, action: action } : null;\n    for (const i of slot) {\n      this.slots[i] = data;\n    }\n    return this;\n  }\n\n  /**\n   * Adds a Button to this page at a slot\n   */\n  setButtonAtSlot(slot: number, button: BackButton | CloseGuiButton): Page {\n    // @ts-ignore\n    this.slots[slot] = { item: button.Item, action: button.Action };\n    return this;\n  }\n}\n", "import {\n  ActionFormData,\n  MessageFormData,\n  ModalFormData,\n  ActionFormResponse,\n  ModalFormResponse,\n  MessageFormResponse,\n} from \"mojang-minecraft-ui\";\nimport { ChestGUI, ISlotChangeReturn } from \"./ChestGUI\";\nimport { InventoryComponentContainer, ItemStack } from \"mojang-minecraft\";\nimport { sleep } from \"../../Scheduling/utils\";\nimport { ItemDatabase } from \"../database/Item\";\nimport { ISlot } from \"./Page\";\n\ntype FormActionReturn<T> = T extends ActionFormData\n  ? Promise<ActionFormResponse>\n  : T extends ModalFormData\n  ? Promise<ModalFormResponse>\n  : Promise<MessageFormResponse>;\n\nexport class ItemGrabbedCallback {\n  gui: ChestGUI;\n  slot: ISlot;\n  change: ISlotChangeReturn;\n  /**\n   * New Callback\n   */\n  constructor(gui: ChestGUI, slot: ISlot, change: ISlotChangeReturn) {\n    this.gui = gui;\n    this.slot = slot;\n    this.change = change;\n  }\n\n  /**\n   * Messages to the owner of this gui\n   * @example ctx.reply('Hello World!');\n   */\n  message(text: string) {\n    this.gui.player.tell(text);\n  }\n\n  /**\n   * Gets the item added\n   */\n  getItemAdded(): ItemStack | null {\n    if (this.slot.item) return null;\n    return this.gui.entity\n      .getComponent(\"minecraft:inventory\")\n      .container.getItem(this.change.slot);\n  }\n\n  /**\n   * Gives the player the item the grabbed\n   */\n  GiveAction(item: ItemStack = this.slot.item.itemStack) {\n    this.gui.player.getComponent(\"minecraft:inventory\").container.addItem(item);\n  }\n\n  /**\n   * Gives the player the item that was grabbed also removes this item from the gui + db\n   * @param db the item database to remove this item from\n   */\n  TakeAction(db: ItemDatabase = null) {\n    this.gui.player\n      .getComponent(\"minecraft:inventory\")\n      .container.addItem(this.slot.item.itemStack);\n    this.gui.page.slots[this.change.slot] = null;\n    if (!db) return;\n    db.delete(this.slot.item.components.dbKey);\n  }\n\n  /**\n   * Changes the page of the chestGui when this item is grabbed\n   * @param page page to send to\n   * @param extras stuff to be passed onto the page\n   */\n  PageAction(page: string, extras?: any) {\n    this.gui.setPage(page, extras);\n  }\n\n  /**\n   * Sends the GUI back to the x previous page\n   * @param amount amount of pages to go back\n   */\n  BackAction(amount: number = 1) {\n    if (this.gui.pageHistory.length < amount)\n      return new Error(`Tried to Go back to a page number that doesnt exist`);\n    console.warn(JSON.stringify(this.gui.pageHistory));\n    const pageID = this.gui.pageHistory.splice(-1 - amount)[0];\n    console.warn(JSON.stringify(this.gui.page.extras));\n    this.PageAction(pageID, this.gui.page.extras);\n  }\n\n  /**\n   * Closes the chect GUI when this item is grabbed\n   */\n  CloseAction() {\n    this.gui.kill();\n  }\n\n  /**\n   * Sets the item back\n   */\n  SetAction() {\n    const container = this.gui.entity.getComponent(\n      \"minecraft:inventory\"\n    ).container;\n    container.setItem(this.change.slot, this.slot.item.itemStack);\n  }\n\n  /**\n   * Opens a form to the player\n   * @param {ActionFormData | ModalFormData | MessageFormData} form form to load\n   * @returns {Promise<ActionFormResponse | ModalFormResponse | MessageFormResponse>}\n   */\n  async FormAction<T extends ActionFormData | ModalFormData | MessageFormData>(\n    form: T\n  ): Promise<FormActionReturn<T>> {\n    this.CloseAction();\n    await sleep(5);\n    // @ts-ignore\n    return await form.show(this.gui.player);\n  }\n}\n", "import {\n  Entity,\n  InventoryComponentContainer,\n  ItemStack,\n  Player,\n  PlayerInventoryComponentContainer,\n  world,\n} from \"mojang-minecraft\";\nimport { sleep } from \"../Scheduling/utils\";\nimport { Item } from \"./Models/Item\";\n\n/**\n * Clears the player of a item in there pointer slot\n */\nexport async function clearPlayersPointer(player: Player, ItemToClear: Item) {\n  try {\n    const inventory = player.getComponent(\"minecraft:inventory\").container;\n    let itemsToLoad = [];\n    for (let i = 0; i < inventory.size; i++) {\n      const item = inventory.getItem(i);\n      if (!item) continue;\n      if (item?.id == ItemToClear?.id) {\n        itemsToLoad.push({ slot: i, item: item });\n        inventory.setItem;\n        if (i < 9) {\n          player.runCommand(`replaceitem entity @s slot.hotbar ${i} air`);\n        } else {\n          player.runCommand(\n            `replaceitem entity @s slot.inventory ${i - 9} air`\n          );\n        }\n      }\n    }\n    player.runCommand(\n      `clear @s ${ItemToClear?.id} ${ItemToClear.data} ${ItemToClear.amount}`\n    );\n    for (const item of itemsToLoad) {\n      inventory.setItem(item.slot, item.item);\n    }\n  } catch (error) {\n    console.warn(error + error.stack);\n    // the item couldnt be cleared that means\n    // they now have a item witch is really BAD\n    // [\n    //   ...player.dimension.getEntities({\n    //     type: \"minecraft:item\",\n    //     location: player.location,\n    //     maxDistance: 2,\n    //     closest: 1,\n    //   }),\n    // ].forEach((e) => e.kill());\n  }\n}\n\n/**\n * Gets a item at slot\n */\nexport function getItemAtSlot(entity: Entity, slot: number): ItemStack | null {\n  const inventory = entity.getComponent(\"minecraft:inventory\").container;\n  return inventory.getItem(slot);\n}\n\n/**\n * Returns all entitys\n */\nexport function getEntitys(type?: string): Array<Entity> {\n  let entitys: Array<Entity> = [];\n  for (const dimension of [\"overworld\", \"nether\", \"the end\"]) {\n    [...world.getDimension(dimension).getEntities()].forEach((e) =>\n      entitys.push(e)\n    );\n  }\n  if (type) return entitys.filter((e) => e?.id == type);\n  return entitys;\n}\n\n/**\n * Gets a players held item\n * @example getHeldItem(Player);\n */\nexport function getHeldItem(player: Player): ItemStack {\n  /**\n   * @type {PlayerInventoryComponentContainer}\n   */\n  const inventory = player.getComponent(\"minecraft:inventory\").container;\n  return inventory.getItem(player.selectedSlot);\n}\n", "import {\n  Enchantment,\n  EnchantmentList,\n  Items,\n  ItemStack,\n  MinecraftEnchantmentTypes,\n} from \"mojang-minecraft\";\n\n/**\n * @typedef {Object} ItemComponents the components on a item\n * @property {String} nameTag the nametag of the item\n * @property {String[]} lore The lore of the item\n * @property {Enchantment[]} enchantments The lore of the item\n * @property {String} dbKey the db key of this itemStack\n */\n\ninterface IItemComponents {\n  /**\n   * the nametag of the item\n   */\n  nameTag?: string;\n  /**\n   * The lore of the item\n   */\n  lore?: string[];\n  /**\n   * The enchantments on this item\n   */\n  enchantments?: Enchantment[];\n  /**\n   * the db key of this itemStack\n   */\n  dbKey?: string;\n}\n\nexport class Item {\n  id: string;\n  amount: number;\n  data: number;\n  components: IItemComponents;\n  itemStack?: ItemStack;\n  /**\n   * Converts a itemStack to a Item\n   * @param item\n   * @param extras extra info to store on the item\n   */\n  static itemStackToItem(item: ItemStack, extras: Object = {}) {\n    const enchantments: EnchantmentList =\n      item.getComponent(\"enchantments\").enchantments;\n    const ItemStackEnchantments: Array<Enchantment> = [];\n    for (const Enchantment in MinecraftEnchantmentTypes) {\n      const ItemEnchantment = enchantments.getEnchantment(\n        MinecraftEnchantmentTypes[\n          Enchantment as keyof MinecraftEnchantmentTypes\n        ]\n      );\n      if (!ItemEnchantment) continue;\n      ItemStackEnchantments.push(\n        MinecraftEnchantmentTypes[\n          Enchantment as keyof MinecraftEnchantmentTypes\n        ]\n      );\n    }\n    return new Item(item.id, item.amount, item.data, {\n      nameTag: item.nameTag,\n      lore: item.getLore(),\n      enchantments: ItemStackEnchantments,\n    });\n  }\n\n  /**\n   * Creates a new Item used for chest GUI\n   * @param {String} id the item id of the item\n   * @param {Number} amount the amount of this item\n   * @param {Number} data the data value of this item\n   * @param {ItemComponents} components the items components\n   * @param {ItemStack} itemStack this itemStack\n   */\n  constructor(\n    id: string,\n    amount: number = 1,\n    data: number = 0,\n    components: IItemComponents = {},\n    itemStack?: ItemStack\n  ) {\n    this.id = id;\n    this.amount = amount;\n    this.data = data;\n    this.components = components;\n\n    this.itemStack = itemStack\n      ? itemStack\n      : new ItemStack(Items.get(this.id), amount, data);\n  }\n\n  /**\n   * Sets a components to this item\n   */\n  setComponents(components: IItemComponents = this.components): ItemStack {\n    this.components = components;\n    if (components?.nameTag) this.itemStack.nameTag = components.nameTag;\n    if (this.components?.lore) this.itemStack.setLore(this.components.lore);\n    if (components?.enchantments?.length > 0) {\n      /**\n       * @type {EnchantmentList}\n       */\n      const ItemStackEnchantments =\n        this.itemStack.getComponent(\"enchantments\").enchantments;\n      for (const ench of components.enchantments) {\n        ItemStackEnchantments.addEnchantment(ench);\n      }\n      this.itemStack.getComponent(\"enchantments\").enchantments =\n        ItemStackEnchantments;\n    }\n    return this.itemStack;\n  }\n}\n", "import { Item } from \"./Item\";\nimport { ItemGrabbedCallback } from \"./ItemGrabbedCallback\";\n\n/**\n * @typedef {Object} Button a default button instance\n * @property {Item} Item The Item that is used as the buttons look\n * @property {(ItemGrabbedCallback) => {}} Action the action this Button Runs\n */\n\nexport class BackButton {\n  /**\n   * The Gui Item Class of this button\n   */\n  static Item = new Item(\"minecraft:arrow\", 1, 0, {\n    nameTag: \"\u00A7fBack\",\n  });\n  /**\n   * The Action that this button is running\n   */\n  static Action = (ctx: ItemGrabbedCallback) => {\n    ctx.BackAction()\n  };\n}\n\nexport class CloseGuiButton {\n  /**\n   * The Gui Item Class of this button\n   */\n   static Item = new Item(\"minecraft:barrier\", 1, 0, {\n    nameTag: \"\u00A7cClose GUI\",\n  });\n  /**\n   * The Action that this button is running\n   */\n  static Action = (ctx: ItemGrabbedCallback) => {\n    ctx.CloseAction()\n  };\n}\n", "import { CloseGuiButton } from \"./Models/Buttons.js\";\nimport { DefaultFill } from \"./Models/FillTypes.js\";\nimport { Item } from \"./Models/Item.js\";\nimport { Page } from \"./Models/Page.js\";\n\n/**\n * The Home page of this GUI this is the most important because\n * when the GUI is opned it will open up here, any plugin can\n * change this but this is the default screen\n */\nexport let HOME_PAGE = new Page(\"home\", 54, DefaultFill)\n  .setSlots(\n    [\n      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 26, 27, 35, 36, 44, 45, 46, 47, 48,\n      50, 51, 52, 53,\n    ],\n    new Item(\"minecraft:stained_glass_pane\", 1, 15, {\n      nameTag: \"\u00A7r\",\n    }),\n    (ctx) => {\n      ctx.SetAction();\n    }\n  )\n  .setSlots(\n    [22],\n    new Item(\"minecraft:ender_chest\", 1, 0, {\n      nameTag: \"\u00A7l\u00A7bModeration\",\n    }),\n    (ctx) => {\n      ctx.PageAction(\"moderation:see\");\n    }\n  )\n  .setButtonAtSlot(49, CloseGuiButton);\n", "import {\n  world,\n  Player,\n  TickEvent,\n  BlockLocation,\n  MinecraftBlockTypes,\n  Entity,\n} from \"mojang-minecraft\";\nimport { STAFF_DB_SCORES, STAFF_SCOREBOARD } from \"./config/staff\";\nimport { text } from \"./lang/text\";\nimport { Region } from \"./modules/models/Region.js\";\n\n/**\n * Kicks a player\n */\nexport function kick(\n  player: Player,\n  message: Array<String> = [],\n  onFail?: () => void\n): void {\n  try {\n    player.runCommand(`kick \"${player.nameTag}\" \u00A7r${message.join(\"\\n\")}`);\n    player.triggerEvent(\"kick\");\n  } catch (error) {\n    if (!/\"statusCode\":-2147352576/.test(error)) return;\n    // This function just tried to kick the owner\n    if (onFail) onFail();\n  }\n}\n\n/**\n * Get score of an entity\n * @example getScore(Entity, 'Money');\n */\nfunction getScore(entity: Entity, objective: string): number {\n  try {\n    return world.scoreboard.getObjective(objective).getScore(entity.scoreboard);\n  } catch (error) {\n    return 0;\n  }\n}\n\n/**\n * sets the score of a name\n * @example setScore(\"Smell of curry\", 'Money');\n */\nfunction setScore(entityName: string, objective: string, value: Number): void {\n  try {\n    return world\n      .getDimension(\"overworld\")\n      .runCommand(\n        `scoreboard players set \"${entityName}\" ${objective} ${value}`\n      );\n  } catch (error) {\n    console.warn(error + error.stack);\n  }\n}\n\n/**\n * Gets the role of this player\n * @param {Player} player player to get role from\n * @returns {\"member\" | \"moderator\" | \"admin\"}\n * @example getRole(\"Smell of curry\")\n */\nexport function getRole(player: Player): \"member\" | \"moderator\" | \"admin\" {\n  const score = getScore(player, STAFF_SCOREBOARD);\n  return STAFF_DB_SCORES[score] as \"member\" | \"moderator\" | \"admin\";\n}\n\n/**\n * Sets the role of this player\n * @example setRole(\"Smell of curry\", \"admin\")\n */\nexport function setRole(\n  playerName: string,\n  value: \"member\" | \"moderator\" | \"admin\"\n): void {\n  const num: Number = parseInt(\n    Object.keys(STAFF_DB_SCORES).find((key) => STAFF_DB_SCORES[key] == value) ??\n      \"0\"\n  );\n  setScore(playerName, STAFF_SCOREBOARD, num);\n}\n\n/**\n * Sets Deny blocks at bottom of region every 5 mins\n */\nexport function loadRegionDenys() {\n  for (const region of Region.getAllRegions()) {\n    const loc1 = new BlockLocation(region.from.x, -64, region.from.z);\n    const loc2 = new BlockLocation(region.to.x, -64, region.to.z);\n    for (const blockLocation of loc1.blocksBetween(loc2)) {\n      world\n        .getDimension(region.dimensionId)\n        .getBlock(blockLocation)\n        ?.setType(MinecraftBlockTypes.deny);\n    }\n  }\n}\n\ninterface IplayerTickRegister {\n  /**\n   * callback to send\n   */\n  callback: (player: Player, event: TickEvent) => void;\n  /**\n   * delay in ticks\n   */\n  delay: number;\n  /**\n   * the last tick it sent a callback\n   */\n  lastCall: number;\n}\n\ninterface ICallbacks {\n  [key: number]: IplayerTickRegister;\n}\n\nconst CALLBACKS: ICallbacks = {};\n\n/**\n * Sends a callback for each player\n * @returns the key to disable this callback\n */\nexport function forEachValidPlayer(\n  callback: (player: Player, event: TickEvent) => void,\n  delay = 0\n): number {\n  const key = Date.now();\n  CALLBACKS[key] = { callback: callback, delay: delay, lastCall: 0 };\n  return key;\n}\n\nexport function disableForEachValidPlayer(key: number) {\n  delete CALLBACKS[key];\n}\n\nworld.events.tick.subscribe((tick) => {\n  const players = [...world.getPlayers()];\n  for (const [i, player] of players.entries()) {\n    if ([\"moderator\", \"admin\"].includes(getRole(player))) return;\n    for (const CALLBACK of Object.values(CALLBACKS)) {\n      if (\n        CALLBACK.delay != 0 &&\n        tick.currentTick - CALLBACK.lastCall < CALLBACK.delay\n      )\n        continue;\n      CALLBACK.callback(player, tick);\n      if (i == players.length - 1) CALLBACK.lastCall = tick.currentTick;\n    }\n  }\n});\n\n/**\n * Runs a Command\n * @param command a minecraft /command\n * @param dimension: \"overworld\" | \"nether\" | \"the end\"\n * @param debug: true console logs the command, else it runs command\n * @example runCommand(`say test`)\n */\nexport function runCommand(\n  command: string,\n  dimension: string = \"overworld\",\n  debug: boolean = false\n): Object {\n  try {\n    return debug\n      ? console.warn(JSON.stringify(this.runCommand(command)))\n      : world.getDimension(dimension).runCommand(command);\n  } catch (error) {\n    return { error: true };\n  }\n}\n\n/**\n * Gets a entitys Unique World Identifer\n */\nexport function getId(entity: Entity): string {\n  try {\n    return entity.scoreboard.id.toString();\n  } catch (error) {\n    try {\n      entity.runCommand(\"scoreboard objectives add test dummy\");\n    } catch (error) {}\n    try {\n      entity.runCommand(\"scoreboard players add @s test 0\");\n    } catch (error) {}\n\n    return entity.scoreboard.id.toString();\n  }\n}\n\ninterface IMsOptions {\n  compactDuration?: string;\n  fullDuration?: string;\n  avoidDuration?: Array<string>;\n}\n\nexport function MS<T extends number | string>(\n  value: T,\n  { compactDuration, fullDuration, avoidDuration }: IMsOptions = {}\n): T extends string ? number : string | null {\n  try {\n    if (typeof value === \"string\") {\n      // @ts-ignore\n      if (/^\\d+$/.test(value)) return Number(value);\n      const durations = value.match(\n        /-?\\d*\\.?\\d+\\s*?(years?|yrs?|weeks?|days?|hours?|hrs?|minutes?|mins?|seconds?|secs?|milliseconds?|msecs?|ms|[smhdwy])/gi\n      );\n      // @ts-ignore\n      return durations ? durations.reduce((a, b) => a + toMS(b), 0) : null;\n    }\n    if (typeof value === \"number\")\n      // @ts-ignore\n      return toDuration(value, {\n        compactDuration,\n        fullDuration,\n        avoidDuration,\n      });\n    throw new Error(text[\"api.utilities.formatter.error.ms\"](value));\n  } catch (err) {\n    const message = isError(err)\n      ? `${err.message}. Value = ${JSON.stringify(value)}`\n      : text[\"api.error.unknown\"]();\n    throw new Error(message);\n  }\n}\n\n/**\n * Convert Durations to milliseconds\n */\nexport function toMS(value: string): number {\n  const number = Number(value.replace(/[^-.0-9]+/g, \"\"));\n  value = value.replace(/\\s+/g, \"\");\n  if (/\\d+(?=y)/i.test(value)) return number * 3.154e10;\n  else if (/\\d+(?=w)/i.test(value)) return number * 6.048e8;\n  else if (/\\d+(?=d)/i.test(value)) return number * 8.64e7;\n  else if (/\\d+(?=h)/i.test(value)) return number * 3.6e6;\n  else if (/\\d+(?=m)/i.test(value)) return number * 60000;\n  else if (/\\d+(?=s)/i.test(value)) return number * 1000;\n  else if (/\\d+(?=ms|milliseconds?)/i.test(value)) return number;\n  return 0;\n}\n\n/**\n * Convert milliseconds to durations\n */\nexport function toDuration(\n  value: number,\n  { compactDuration, fullDuration, avoidDuration }: IMsOptions = {}\n): string {\n  const absMs = Math.abs(value);\n  const duration = [\n    { short: \"w\", long: \"week\", duration: Math.floor(absMs / 6.048e8) },\n    { short: \"d\", long: \"day\", duration: Math.floor(absMs / 8.64e7) % 7 },\n    { short: \"h\", long: \"hour\", duration: Math.floor(absMs / 3.6e6) % 24 },\n    { short: \"m\", long: \"minute\", duration: Math.floor(absMs / 60000) % 60 },\n    { short: \"s\", long: \"second\", duration: Math.floor(absMs / 1000) % 60 },\n    { short: \"ms\", long: \"millisecond\", duration: absMs % 1000 },\n  ];\n  const mappedDuration = duration\n    .filter((obj) =>\n      obj.duration !== 0 && avoidDuration\n        ? fullDuration &&\n          !avoidDuration.map((v) => v.toLowerCase()).includes(obj.short)\n        : obj.duration\n    )\n    .map(\n      (obj) =>\n        `${Math.sign(value) === -1 ? \"-\" : \"\"}${\n          compactDuration\n            ? `${Math.floor(obj.duration)}${obj.short}`\n            : `${Math.floor(obj.duration)} ${obj.long}${\n                obj.duration === 1 ? \"\" : \"s\"\n              }`\n        }`\n    );\n  const result = fullDuration\n    ? mappedDuration.join(compactDuration ? \" \" : \", \")\n    : mappedDuration[0];\n  return result || `${absMs}`;\n}\n\n/**\n * A type guard for errors.\n */\nexport function isError(error: any): boolean {\n  return typeof error === \"object\" && error !== null && \"message\" in error;\n}\n", "/**\n * The scoreboard that is used for staff\n */\nexport const STAFF_SCOREBOARD: string = \"STAFF_DB\";\n\n/**\n * Each key in here has a relation to the score that a player has\n * on the `STAFF_SCOREBOARD` to role\n */\nexport const STAFF_DB_SCORES = {\n  null: \"member\",\n  0: \"member\",\n  1: \"admin\",\n  2: \"moderator\",\n} as { [key: string | number]: string };\n", "/**\n * The default permissions for all regions made\n */\nexport const DEFAULT_REGION_PERMISSIONS = {\n  /**\n   * If players in this region can use doors, trapdoors, and switches like buttons and levers\n   */\n  doorsAndSwitches: true,\n  /**\n   * If players in this region can open containers, this is like chests, furnaces, hoppers, etc\n   */\n  openContainers: true,\n  /**\n   * If the players in this region can fight each other\n   */\n  pvp: false,\n  /**\n   * the entitys allowed in this region\n   */\n  allowedEntitys: [\"minecraft:player\", \"minecraft:npc\", \"minecraft:item\"],\n};\n\n/**\n * All doors and switches in minecraft\n */\nexport const DOORS_SWITCHES = [\n  \"minecraft:acacia_door\",\n  \"minecraft:acacia_trapdoor\",\n  \"minecraft:acacia_button\",\n  \"minecraft:birch_door\",\n  \"minecraft:birch_trapdoor\",\n  \"minecraft:birch_button\",\n  \"minecraft:crimson_door\",\n  \"minecraft:crimson_trapdoor\",\n  \"minecraft:crimson_button\",\n  \"minecraft:dark_oak_door\",\n  \"minecraft:dark_oak_trapdoor\",\n  \"minecraft:dark_oak_button\",\n  \"minecraft:jungle_door\",\n  \"minecraft:jungle_trapdoor\",\n  \"minecraft:jungle_button\",\n  \"minecraft:mangrove_door\",\n  \"minecraft:mangrove_trapdoor\",\n  \"minecraft:mangrove_button\",\n  \"minecraft:spruce_door\",\n  \"minecraft:spruce_trapdoor\",\n  \"minecraft:spruce_button\",\n  \"minecraft:warped_door\",\n  \"minecraft:warped_trapdoor\",\n  \"minecraft:warped_button\",\n  \"minecraft:wooden_door\",\n  \"minecraft:wooden_button\",\n  \"minecraft:trapdoor\",\n  \"minecraft:iron_door\",\n  \"minecraft:iron_trapdoor\",\n  \"minecraft:polished_blackstone_button\",\n  \"minecraft:lever\",\n];\n\n/**\n * A List of all containers a item could be in\n */\nexport const BLOCK_CONTAINERS = [\n  \"minecraft:chest\",\n  \"minecraft:ender_chest\",\n  \"minecraft:barrel\",\n  \"minecraft:trapped_chest\",\n  \"minecraft:dispenser\",\n  \"minecraft:dropper\",\n  \"minecraft:furnace\",\n  \"minecraft:blast_furnace\",\n  \"minecraft:lit_furnace\",\n  \"minecraft:lit_blast_furnace\",\n  \"minecraft:hopper\",\n  \"minecraft:shulker_box\",\n  \"minecraft:undyed_shulker_box\",\n];\n", "import { BlockLocation, Entity, Player } from \"mojang-minecraft\";\nimport { DEFAULT_REGION_PERMISSIONS } from \"../../config/region\";\nimport { TABLES } from \"../../index.js\";\nimport { loadRegionDenys } from \"../../utils.js\";\n\n/**\n * Holds all regions in memory so its not grabbing them so much\n */\nexport const REGIONS: Array<Region> = [];\n\n/**\n * If the regions have been grabbed if not it will grab them and set this to true\n */\nlet REGIONS_HAVE_BEEN_GRABBED: boolean = false;\n\ninterface RegionCords {\n  x: number;\n  z: number;\n}\n\ninterface RegionPermissions {\n  /**\n   * if the player can use chests, defualt: true\n   */\n  doorsAndSwitches: Boolean;\n  /**\n   * if the player can use doors, default: true\n   */\n  openContainers: Boolean;\n  /**\n   * if players can fight, default: false\n   */\n  pvp: Boolean;\n  /**\n   * the entitys allowed in this region\n   */\n  allowedEntitys: Array<string>;\n}\n\n/**\n * The Lowest Y value in minecraft\n */\nconst LOWEST_Y_VALUE: number = -64;\n\n/**\n * The HIGEST Y value in minecraft\n */\nconst HIGEST_Y_VALUE: number = 320;\n\n/**\n * Compare a array of numbers with 2 arrays\n * @param XYZa The first set of numbers\n * @param XYZb The second set of numbers\n * @param XYZc The set of numbers that should between the first and second set of numbers\n * @example betweenXYZ([1, 0, 1], [22, 81, 10], [19, 40, 6]));\n */\nfunction betweenXYZ(\n  XYZa: [number, number, number],\n  XYZb: [number, number, number],\n  XYZc: [number, number, number]\n): boolean {\n  return XYZc.every(\n    (c, i) => c >= Math.min(XYZa[i], XYZb[i]) && c <= Math.max(XYZa[i], XYZb[i])\n  );\n}\n\nexport class Region {\n  dimensionId: string;\n  from: RegionCords;\n  to: RegionCords;\n  key: string;\n  permissions: RegionPermissions;\n  /**\n   * Gets all regions\n   */\n  static getAllRegions(): Array<Region> {\n    if (REGIONS_HAVE_BEEN_GRABBED) return REGIONS;\n    const regions = TABLES.regions\n      .values()\n      .map(\n        (region) =>\n          new Region(\n            region.from,\n            region.to,\n            region.dimensionId,\n            region.permissions,\n            region.key\n          )\n      );\n    regions.forEach((r) => {\n      REGIONS.push(r);\n    });\n    return regions;\n  }\n\n  /**\n   * Checks if a block location is in region\n   */\n  static blockLocationInRegion(\n    blockLocation: BlockLocation,\n    dimensionId: string\n  ): Region | undefined {\n    return this.getAllRegions().find(\n      (region) =>\n        region.dimensionId == dimensionId &&\n        betweenXYZ(\n          [region.from.x, LOWEST_Y_VALUE, region.from.z],\n          [region.to.x, HIGEST_Y_VALUE, region.to.z],\n          [blockLocation.x, blockLocation.y, blockLocation.z]\n        )\n    );\n  }\n\n  /**\n   * Removes a region at a block Location\n   * @param dimensionId the id of this dimension\n   * @returns if the region was removed or not\n   */\n  static removeRegionAtBlockLocation(\n    blockLocation: BlockLocation,\n    dimensionId: string\n  ): Boolean {\n    const region = this.blockLocationInRegion(blockLocation, dimensionId);\n    if (!region) return false;\n    return TABLES.regions.delete(region.key);\n  }\n  /**\n   * Creates a new Region to store in db\n   */\n  constructor(\n    from: RegionCords,\n    to: RegionCords,\n    dimensionId: string,\n    permissions?: RegionPermissions,\n    key?: string\n  ) {\n    this.from = from;\n    this.to = to;\n    this.dimensionId = dimensionId;\n    this.permissions = permissions ?? DEFAULT_REGION_PERMISSIONS;\n    this.key = key ? key : Date.now().toString();\n\n    if (!key) {\n      this.update();\n      loadRegionDenys();\n      REGIONS.push(this);\n    }\n  }\n\n  /**\n   * Updates this region in the database\n   */\n  update(): void {\n    TABLES.regions.set(this.key, {\n      key: this.key,\n      from: this.from,\n      dimensionId: this.dimensionId,\n      permissions: this.permissions,\n      to: this.to,\n    });\n  }\n\n  /**\n   * removes this region\n   * @returns if the region was removed succesfully\n   */\n  delete(): boolean {\n    return TABLES.regions.delete(this.key);\n  }\n\n  /**\n   * Checks if a player is in this region\n   * @returns if a entity is in this region or not\n   */\n  entityInRegion(entity: Entity): Boolean {\n    return (\n      this.dimensionId == entity.dimension.id &&\n      betweenXYZ(\n        [this.from.x, LOWEST_Y_VALUE, this.from.z],\n        [this.to.x, HIGEST_Y_VALUE, this.to.z],\n        [entity.location.x, entity.location.y, entity.location.z]\n      )\n    );\n  }\n\n  /**\n   * Changes a permission to on or off\n   */\n  changePermission<T extends keyof RegionPermissions>(\n    key: T,\n    value: RegionPermissions[T]\n  ): void {\n    this.permissions[key] = value;\n    this.update();\n  }\n}\n", "import { Player } from \"mojang-minecraft\";\nimport { TABLES } from \"../../index.js\";\nimport { getId, MS } from \"../../utils.js\";\n\nexport class Ban {\n  /**\n   * Ban a player for a set length\n   */\n  constructor(\n    player: Player,\n    length?: number,\n    unit?: string,\n    reason: string = \"No Reason\",\n    by: string = \"Smelly Anti Cheat\"\n  ) {\n    length = length ? MS(`${length} ${unit}`) : null;\n    const data = {\n      key: getId(player),\n      player: player.name,\n      date: Date.now(),\n      length: length,\n      expire: length ? length + Date.now() : null,\n      reason: reason,\n      by: by,\n    };\n    TABLES.bans.set(getId(player), data);\n  }\n}\n", "import { text } from \"../../lang/text.js\";\nimport { Command } from \"../../lib/Commands/Command.js\";\nimport { getRole } from \"../../utils.js\";\nimport { Ban } from \"../models/Ban.js\";\n\nnew Command({\n  name: \"ban\",\n  description: \"Ban players for lengths\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n})\n  .addOption(\"player\", \"player\", \"Player to ban\")\n  .addOption(\"length\", \"int\", \"Time ammount to ban\")\n  .addOption(\"unit\", \"string\", \"The unit for the time\")\n  .addOption(\"reason\", \"string\", \"reason for ban\", true)\n  // @ts-ignore\n  .executes((ctx, { player, length, unit, reason }) => {\n    new Ban(player, length, unit, reason, ctx.sender.name);\n    ctx.reply(\n      text[\"modules.commands.ban.reply\"](player.name, length, unit, reason)\n    );\n  });\n", "/*\n|--------------------------------------------------------------------------\n| Enchantments\n|--------------------------------------------------------------------------\n|\n| This is the default enchantments that can be added to items\n| each enchantment is set to its desired max level this can be changed here\n| or in game using -config enchantments set \"enchantment\" value\n|\n*/\nexport const ENCHANTMENTS = {\n  aquaAffinity: 1,\n  baneOfArthropods: 5,\n  binding: 1,\n  blastProtection: 4,\n  channeling: 1,\n  depthStrider: 3,\n  efficiency: 5,\n  featherFalling: 4,\n  fireAspect: 2,\n  fireProtection: 4,\n  flame: 1,\n  fortune: 3,\n  frostWalker: 2,\n  impaling: 5,\n  infinity: 1,\n  knockback: 2,\n  looting: 3,\n  loyalty: 4,\n  luckOfTheSea: 3,\n  lure: 3,\n  mending: 1,\n  multishot: 1,\n  piercing: 4,\n  power: 5,\n  projectileProtection: 4,\n  protection: 4,\n  punch: 2,\n  quickCharge: 3,\n  respiration: 3,\n  riptide: 3,\n  sharpness: 5,\n  silkTouch: 1,\n  smite: 5,\n  soulSpeed: 3,\n  swiftSneak: 4,\n  thorns: 3,\n  unbreaking: 3,\n  vanishing: 1,\n};\n", "import { ENCHANTMENTS } from \"../../config/enchantments.js\";\nimport { BANNED_BLOCKS, BANNED_ITEMS } from \"../../config/moderation.js\";\nimport { TABLES } from \"../../index.js\";\nimport { Command } from \"../../lib/Commands/Command.js\";\nimport { getRole } from \"../../utils.js\";\n\nconst config = new Command({\n  name: \"config\",\n  description: \"Opens up a form to configure rubedo\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n});\n\nconst banned = config.addSubCommand({\n  name: \"banned\",\n  description: \"Manages banned items/blocks on this server\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n});\n\nconst bannedItems = banned.addSubCommand({\n  name: \"items\",\n  description: \"Manages the banned items on this server\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n});\n\nbannedItems\n  .addSubCommand({\n    name: \"add\",\n    description: \"Adds a item to the banned items list\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"item\", \"string\", \"item to add make sure it is prefix:item\")\n  .executes((ctx, { item }: { item: string }) => {\n    /**\n     * @type {Array<String>}\n     */\n    let items = TABLES.config.get(\"banned_items\") ?? BANNED_ITEMS;\n    if (!items.includes(item)) items.push(item);\n    TABLES.config.set(\"banned_items\", items);\n    ctx.reply(`Banned the item \"${item}\"`);\n  });\n\nbannedItems\n  .addSubCommand({\n    name: \"remove\",\n    description: \"Removes a item from the banned items list\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"item\", \"string\", \"item to remove make sure it is prefix:item\")\n  .executes((ctx, { item }: { item: string }) => {\n    let items: string[] = TABLES.config.get(\"banned_items\") ?? BANNED_ITEMS;\n    if (!items.includes(item))\n      return ctx.reply(`item: \"${item}\" is not banned`);\n    items = items.filter((p) => p != item);\n    TABLES.config.set(\"banned_items\", items);\n    ctx.reply(`Removed Banned item \"${item}\"`);\n  });\n\nconst bannedBlocks = banned.addSubCommand({\n  name: \"blocks\",\n  description: \"Manages the banned blocks on this server\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n});\n\nbannedBlocks\n  .addSubCommand({\n    name: \"add\",\n    description: \"Adds a block to the banned blocks list\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"block\", \"string\", \"item to add make sure it is prefix:block\")\n  .executes((ctx, { block }: { block: string }) => {\n    let blocks: string[] = TABLES.config.get(\"banned_blocks\") ?? BANNED_BLOCKS;\n    if (!blocks.includes(block)) blocks.push(block);\n    TABLES.config.set(\"banned_blocks\", block);\n    ctx.reply(`Banned the block \"${block}\"`);\n  });\n\nbannedBlocks\n  .addSubCommand({\n    name: \"remove\",\n    description: \"Removes a block from the banned blocks list\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"block\", \"string\", \"block to remove make sure it is prefix:block\")\n  .executes((ctx, { block }: { block: string }) => {\n    let blocks: string[] = TABLES.config.get(\"banned_blocks\") ?? BANNED_BLOCKS;\n    if (!blocks.includes(block))\n      return ctx.reply(`block: \"${block}\" is not banned`);\n    blocks = blocks.filter((p) => p != block);\n    TABLES.config.set(\"banned_blocks\", block);\n    ctx.reply(`Removed Banned block \"${block}\"`);\n  });\n\nconst enchantments = config.addSubCommand({\n  name: \"enchantments\",\n  description: \"Manages the maxEnchants on this srrver\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n});\n\nenchantments\n  .addSubCommand({\n    name: \"set\",\n    description: \"Sets a enchantment to a level\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"enchantment\", Object.keys(ENCHANTMENTS), \"enchantment to change\")\n  .addOption(\"level\", \"int\", \"Max level to change the enchantment to\")\n  .executes(\n    (ctx, { enchantment, level }: { enchantment: string; level: number }) => {\n      /**\n       * @type {Array<String>}\n       */\n      let enchants = TABLES.config.get(\"enchantments\") ?? ENCHANTMENTS;\n      enchants[enchantment] = level;\n      TABLES.config.set(\"enchantments\", enchants);\n      ctx.reply(`Set max level for ${enchantment} to ${level}`);\n    }\n  );\n\nenchantments\n  .addSubCommand({\n    name: \"get\",\n    description: \"Gets the max level for a enchantment\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"enchantment\", Object.keys(ENCHANTMENTS), \"enchantment to change\")\n  .executes((ctx, { enchantment }: { enchantment: string }) => {\n    let enchants = TABLES.config.get(\"enchantments\") ?? ENCHANTMENTS;\n    ctx.reply(`Max level for ${enchantment} is ${enchants[enchantment]}`);\n  });\n\nconfig\n  .addSubCommand({\n    name: \"setAppealLink\",\n    description: \"Sets the appeal link for this server\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"link\", \"string\", \"the link to have people go to, to appeal\")\n  //@ts-ignore\n  .executes((ctx, { link }) => {\n    TABLES.config.set(\"appealLink\", link);\n    ctx.reply(`Changed the servers appeal link to ${link}`);\n  });\n", "import { Command } from \"../../lib/Commands/Command\";\nimport { TABLES } from \"../../index.js\";\nimport { getRole } from \"../../utils\";\n\nconst dbcm = new Command({\n  name: \"database\",\n  description: \"Interacts with SA Database\",\n  aliases: [\"db\"],\n  hasPermission: (player) => getRole(player) == \"admin\",\n});\n\ndbcm\n  .addSubCommand({\n    name: \"get\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"table\", \"string\", \"Table to grab from\")\n  .addOption(\"key\", \"string\", \"Key to grab\")\n  .executes((ctx, { table, key }: { table: string; key: string }) => {\n    try {\n      const data = TABLES[table].get(key);\n      if (data) {\n        ctx.reply(data);\n      } else {\n        ctx.reply(`No data could be found for key ${key}`);\n      }\n    } catch (error) {\n      ctx.reply(error + error.stack);\n    }\n  });\n\ndbcm\n  .addSubCommand({\n    name: \"set\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"table\", \"string\", \"Table to set to\")\n  .addOption(\"key\", \"string\", \"Key to set\")\n  .addOption(\"value\", \"string\", \"Value to assign to the key\")\n  .executes(\n    (\n      ctx,\n      { table, key, value }: { table: string; key: string; value: string }\n    ) => {\n      try {\n        TABLES[table].set(key, value);\n        ctx.reply(\n          `Set Key: \"${key}\", to value: \"${value}\" on table: \"${table}\"`\n        );\n      } catch (error) {\n        ctx.reply(error + error.stack);\n      }\n    }\n  );\n\ndbcm\n  .addSubCommand({\n    name: \"clear\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"table\", \"string\", \"Table to set to\")\n  .executes((ctx, { table }: { table: string }) => {\n    try {\n      TABLES[table].clear();\n      ctx.reply(`Cleared Table ${table}`);\n    } catch (error) {\n      ctx.reply(error + error.stack);\n    }\n  });\n", "import { Player } from \"mojang-minecraft\";\nimport { Command } from \"../../lib/Commands/Command.js\";\nimport { getRole } from \"../../utils.js\";\n\nnew Command({\n  name: \"ecwipe\",\n  description: \"Clears a players ender chest\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n})\n  .addOption(\"player\", \"player\", \"Player to clear\")\n  .executes((ctx, { player }: {player: Player}) => {\n    for (let i = 0; i < 27; i++) {\n      player.runCommand(`replaceitem entity @s slot.enderchest ${i} air`);\n    }\n    ctx.reply(`Cleared ${player.name} Ender chest!`);\n  });\n", "import { Player } from \"mojang-minecraft\";\nimport { getId } from \"../../utils.js\";\nimport { TABLES } from \"../../index.js\";\n\nexport class Freeze {\n  /**\n   * Freeze a player\n   */\n  constructor(player: Player, reason: string = \"No Reason\") {\n    const data = {\n      player: player.name,\n      key: getId(player),\n      reason: reason,\n      location: {\n        x: player.location.x,\n        y: player.location.y,\n        z: player.location.z,\n        dimension: player.dimension.id,\n      },\n    };\n    TABLES.freezes.set(getId(player), data);\n  }\n}\n", "import { Command } from \"../../lib/Commands/Command.js\";\nimport { Freeze } from \"../models/Freeze.js\";\nimport { getRole } from \"../../utils.js\";\nimport { Player } from \"mojang-minecraft\";\n\nnew Command({\n  name: \"freeze\",\n  description: \"Freeze a player\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n})\n  .addOption(\"player\", \"player\", \"Player to ban\")\n  .addOption(\"reason\", \"string\", \"reason for ban\", true)\n  .executes((ctx, { player, reason }: { player: Player; reason: string }) => {\n    new Freeze(player, reason);\n    ctx.reply(\n      `\u00A7cFroze \u00A7f\"\u00A7a${player.name}\u00A7f\" Because: \"${\n        reason ?? \"No reason Provided\"\n      }\" \u00A7aSuccessfully`\n    );\n    ctx.sender.tell(\n      `\u00A7cYou have been frozen by \u00A7f\"\u00A7a${ctx.sender.nameTag}\u00A7f\" Because: \"${\n        reason ?? \"No reason Provided\"\n      }\"`\n    );\n  });\n", "import { Command } from \"../../lib/Commands/Command.js\";\nimport { COMMAND_PATHS } from \"../../lib/Commands/index.js\";\n\nnew Command(\n  {\n    name: \"help\",\n    description: \"Provides help/list of commands.\",\n    aliases: [\"?\", \"h\"],\n  },\n  (ctx) => {\n    if (COMMAND_PATHS.length == 0) return ctx.reply(`No Commands Found`);\n    const ALL_COMMANDS = COMMAND_PATHS.filter(\n      (command) => command.callback && command.hasPermission(ctx.sender)\n    );\n    let page = 1;\n    const maxPages = Math.ceil(ALL_COMMANDS.length / 10);\n    const arg = ctx.args[0];\n    if (arg) {\n      if (!isNaN(parseInt(arg))) {\n        page = parseInt(arg);\n      } else {\n        const cmd = ALL_COMMANDS.find((cmd) => cmd.path.includes(arg));\n        if (!cmd) return ctx.reply(`The command ${arg} does not exist`);\n        ctx.sender.tell({\n          rawtext: [\n            //@ts-ignore\n            {\n              translate: `commands.help.command.aliases`,\n              with: [cmd.name, cmd.aliases.join(\", \")],\n            },\n          ],\n        });\n        ctx.reply(cmd.description);\n        ctx.reply(`Usage: \\n`);\n        for (const command of ALL_COMMANDS.filter(\n          (c) => c.path[0] == ctx.args[0]\n        )) {\n          const options = command.options.map(\n            (option) =>\n              `${option.optional ? \"[\" : \"<\"}${option.name}: ${option.type}${\n                option.optional ? \"]\" : \">\"\n              }`\n          );\n          ctx.reply(`-${command.path.join(\" \")} ${options.join(\" \")}`);\n        }\n        return;\n      }\n    }\n    if (page > maxPages) page = maxPages;\n    ctx.sender.tell({\n      rawtext: [\n        //@ts-ignore\n        {\n          translate: `commands.help.header`,\n          with: [page.toString(), maxPages.toString()],\n        },\n      ],\n    });\n\n    for (const command of ALL_COMMANDS.slice(page * 10 - 10, page * 10)) {\n      const options = command.options.map(\n        (option) =>\n          `${option.optional ? \"[\" : \"<\"}${option.name}: ${option.type}${\n            option.optional ? \"]\" : \">\"\n          }`\n      );\n      ctx.reply(`-${command.path.join(\" \")} ${options.join(\" \")}`);\n    }\n  }\n);\n", "import { Player } from \"mojang-minecraft\";\nimport { getId, MS } from \"../../utils.js\";\nimport { TABLES } from \"../../index.js\";\n\n/**\n * @typedef {Object} muteData\n * @property {number} player playerID this is associated with\n * @property {number} date the date of this mute\n * @property {number | null} length the length in ms\n * @property {number | null} expire the ms when this mute will end\n * @property {string} reason the reason for this mute\n * @property {string} by who this mute was by\n */\n\ninterface IMuteData {\n  player: string;\n  date: number;\n  length: number | null;\n  expire: number | null;\n  reason: string;\n  by: string;\n}\n\nexport class Mute {\n  length: number;\n  /**\n   * Gets the mute data for this player\n   * @param {Player} player player to get\n   * @returns {muteData | null}\n   */\n  static getMuteData(player: Player) {\n    return TABLES.mutes.get(getId(player));\n  }\n  /**\n   * Mutes a player for a length\n   */\n  constructor(\n    player: Player,\n    length?: number,\n    unit?: string,\n    reason: string = \"No Reason\",\n    by: string = \"Smelly Anti Cheat\"\n  ) {\n    player.runCommand(`ability @s mute true`);\n    const msLength = length ? MS(`${length} ${unit}`) : null;\n    const data: IMuteData = {\n      player: getId(player),\n      date: Date.now(),\n      length: msLength,\n      expire: msLength ? msLength + Date.now() : null,\n      reason: reason,\n      by: by,\n    };\n    TABLES.mutes.set(getId(player), data);\n  }\n}\n", "import { Command } from \"../../lib/Commands/Command.js\";\nimport { Mute } from \"../models/Mute.js\";\nimport { getRole } from \"../../utils.js\";\nimport { Player } from \"mojang-minecraft\";\n\nnew Command({\n  name: \"mute\",\n  description: \"Mute a player for lengths\",\n  hasPermission: (player) => [\"admin\", \"moderator\"].includes(getRole(player)),\n})\n  .addOption(\"player\", \"player\", \"Player to mute\")\n  .addOption(\"length\", \"int\", \"Time ammount of mute\", true)\n  .addOption(\"unit\", \"string\", \"The unit for the time\", true)\n  .addOption(\"reason\", \"string\", \"reason for mute\", true)\n  .executes(\n    (\n      ctx,\n      {\n        player,\n        length,\n        unit,\n        reason,\n      }: { player: Player; length: number; unit: string; reason: string }\n    ) => {\n      new Mute(player, length, unit, reason, ctx.sender.nameTag);\n      ctx.reply(\n        `\u00A7cMuted \u00A7f\"\u00A7a${player.name}\u00A7f\" \u00A7cfor ${length} ${unit} Because: \"${\n          reason ?? \"No reason Provided\"\n        }\" \u00A7aSuccessfully`\n      );\n      player.tell(\n        `\u00A7cYou have been muted by \u00A7f\"${\n          ctx.sender.name\n        }\" \u00A7cfor ${length} ${unit} Because: \"${reason ?? \"No reason Provided\"}\"`\n      );\n    }\n  );\n", "import { NPC_LOCATIONS } from \"../../index.js\";\nimport { Command } from \"../../lib/Commands/Command.js\";\nimport { getRole } from \"../../utils.js\";\n\nnew Command(\n  {\n    name: \"npc\",\n    description: \"Spawns a npc at your coordinates\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  },\n  (ctx) => {\n    NPC_LOCATIONS.push(ctx.sender.location);\n    ctx.sender.dimension.spawnEntity(\"minecraft:npc\", ctx.sender.location);\n    ctx.reply(`Spawned a verifed npc at your current location`);\n  }\n);\n", "import { Command } from \"../../lib/Commands/Command.js\";\nimport { world } from \"mojang-minecraft\";\n\nnew Command(\n  {\n    name: \"ping\",\n    description: \"Returns the current TPS of the servers ping\",\n  },\n  (ctx) => {\n    let pingTick = world.events.tick.subscribe(({ deltaTime }) => {\n      ctx.reply(`Pong! Current TPS: ${1 / deltaTime}`);\n      world.events.tick.unsubscribe(pingTick);\n    });\n  }\n);\n", "import { BlockLocation } from \"mojang-minecraft\";\nimport { Command } from \"../../lib/Commands/Command.js\";\nimport { Region } from \"../models/Region.js\";\nimport { getRole } from \"../../utils.js\";\n\nconst command = new Command({\n  name: \"region\",\n  description: \"Create a Region\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n});\n\ncommand\n  .addSubCommand({\n    name: \"add\",\n    description: \"Adds a new protection region\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"from_x\", \"int\", \"The starting x of the region\")\n  .addOption(\"from_z\", \"int\", \"The starting z of the region\")\n  .addOption(\"to_x\", \"int\", \"The ending x of the region\")\n  .addOption(\"to_z\", \"int\", \"The ending z of the region\")\n  // @ts-ignore\n  .executes((ctx, { from_x, from_z, to_x, to_z }) => {\n    new Region(\n      { x: from_x, z: from_z },\n      { x: to_x, z: to_z },\n      ctx.sender.dimension.id\n    );\n    ctx.reply(\n      `Created Region From ${from_x} -64 ${from_z} ${to_x} 320 ${to_z}`\n    );\n  });\n\ncommand.addSubCommand(\n  {\n    name: \"remove\",\n    description: \"Removes a region at the players current postion\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  },\n  (ctx) => {\n    const loc = new BlockLocation(\n      ctx.sender.location.x,\n      ctx.sender.location.y,\n      ctx.sender.location.z\n    );\n    const r = Region.removeRegionAtBlockLocation(loc, ctx.sender.dimension.id);\n    if (r) {\n      ctx.reply(`Removed Region at ${loc.x} ${loc.y} ${loc.z}`);\n    } else {\n      ctx.reply(`Failed to find/remove region at ${loc.x} ${loc.y} ${loc.z}`);\n    }\n  }\n);\n\ncommand.addSubCommand(\n  {\n    name: \"removeAll\",\n    description: \"Removes all regions\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  },\n  (ctx) => {\n    Region.getAllRegions().forEach((r) => r.delete());\n    ctx.reply(`Removed All regions`);\n  }\n);\n\ncommand.addSubCommand(\n  {\n    name: \"list\",\n    description: \"Lists all regions and positions\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  },\n  (ctx) => {\n    const regions = Region.getAllRegions();\n    for (const region of regions) {\n      ctx.reply(\n        `Region from ${region.from.x}, ${region.from.z} to ${region.to.x}, ${region.to.z} in dimension ${region.dimensionId}`\n      );\n    }\n    if (regions.length == 0) return ctx.reply(`No regions have been made yet`);\n  }\n);\n\nconst permission = command.addSubCommand({\n  name: \"permission\",\n  description: \"Handels permissions for regions\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n});\n\npermission\n  .addSubCommand({\n    name: \"set\",\n    description:\n      \"Sets a certin permission on the region the player is currently in to a value\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\n    \"key\",\n    [\"doorsAndSwitches\", \"openContainers\", \"pvp\"],\n    \"The region permission to change\"\n  )\n  .addOption(\"value\", \"boolean\", \"If this permission should be on or off\")\n  // @ts-ignore\n  .executes((ctx, { key, value }) => {\n    const region = Region.blockLocationInRegion(\n      new BlockLocation(\n        ctx.sender.location.x,\n        ctx.sender.location.y,\n        ctx.sender.location.z\n      ),\n      ctx.sender.dimension.id\n    );\n    if (!region) return ctx.reply(`You are not in a region`);\n    region.changePermission(key, value);\n    ctx.reply(`Changed permision ${key} to ${value}`);\n  });\n\npermission.addSubCommand(\n  {\n    name: \"list\",\n    description: \"Lists the permissions for the current region\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  },\n  (ctx) => {\n    const region = Region.blockLocationInRegion(\n      new BlockLocation(\n        ctx.sender.location.x,\n        ctx.sender.location.y,\n        ctx.sender.location.z\n      ),\n      ctx.sender.dimension.id\n    );\n    if (!region) return ctx.reply(`You are not in a region`);\n    ctx.reply(\n      `Current region permissions ${JSON.stringify(region.permissions)}`\n    );\n  }\n);\n\nconst entityCommands = permission.addSubCommand({\n  name: \"entities\",\n  description: \"Holds the subCommands for adding or removing allowedEntitys\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n});\n\nentityCommands\n  .addSubCommand({\n    name: \"add\",\n    description: \"Adds a entity to the allowed entitys list\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"entity\", \"string\", \"the entity id to add\")\n  // @ts-ignore\n  .executes((ctx, { entity }) => {\n    const region = Region.blockLocationInRegion(\n      new BlockLocation(\n        ctx.sender.location.x,\n        ctx.sender.location.y,\n        ctx.sender.location.z\n      ),\n      ctx.sender.dimension.id\n    );\n    if (!region) return ctx.reply(`You are not in a region`);\n    const currentAllowedEntitys = region.permissions.allowedEntitys;\n    currentAllowedEntitys.push(entity);\n    region.changePermission(\"allowedEntitys\", currentAllowedEntitys);\n    ctx.reply(\n      `Added entity ${entity} to the allowed entitys of the region your currently standing in`\n    );\n  });\n\nentityCommands\n  .addSubCommand({\n    name: \"remove\",\n    description: \"Removes a entity from the allowed entitys in the region\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"entity\", \"string\", \"the entity id to add\")\n  // @ts-ignore\n  .executes((ctx, { entity }) => {\n    const region = Region.blockLocationInRegion(\n      new BlockLocation(\n        ctx.sender.location.x,\n        ctx.sender.location.y,\n        ctx.sender.location.z\n      ),\n      ctx.sender.dimension.id\n    );\n    if (!region) return ctx.reply(`You are not in a region`);\n    let currentAllowedEntitys = region.permissions.allowedEntitys;\n    if (!currentAllowedEntitys.includes(entity))\n      return ctx.reply(\n        `The entity ${entity} is not allowed to enter the region`\n      );\n    currentAllowedEntitys = currentAllowedEntitys.filter((v) => v != entity);\n    region.changePermission(\"allowedEntitys\", currentAllowedEntitys);\n    ctx.reply(\n      `Removed entity ${entity} to the allowed entitys of the region your currently standing in`\n    );\n  });\n", "import { Command } from \"../../lib/Commands/Command.js\";\nimport { getRole, setRole } from \"../../utils.js\";\n\nconst main = new Command({\n  name: \"role\",\n  description: \"Changes role for a player\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n});\n\nmain\n  .addSubCommand({\n    name: \"set\",\n    description: \"Sets the role for a player\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  })\n  .addOption(\"playerName\", \"string\", \"player to set\")\n  .addOption(\n    \"role\",\n    [\"member\", \"moderator\", \"admin\"],\n    \"Role to set this player to\"\n  )\n    // @ts-ignore\n  .executes((ctx, { playerName, role }) => {\n    setRole(playerName, role);\n    ctx.reply(`Changed role of ${playerName} to ${role}`);\n  });\n\nmain\n  .addSubCommand({\n    name: \"get\",\n    description: \"Gets the role of a player\",\n    hasPermission: (player) => getRole(player) == (\"admin\" || \"moderator\"),\n  })\n  .addOption(\"playerName\", \"string\", \"player to set\")\n    // @ts-ignore\n  .executes((ctx, { playerName }) => {\n    ctx.reply(`${playerName} has role: ${getRole(playerName)}`);\n  });\n", "import { Command } from \"../../lib/Commands/Command.js\";\nimport { getRole } from \"../../utils.js\";\n\nnew Command(\n  {\n    name: \"spectate\",\n    description: \"Toggles Spectater Mode on the sender\",\n    hasPermission: (player) => getRole(player) == \"admin\",\n  },\n  (ctx) => {\n    if (ctx.sender.hasTag(`spectator`)) {\n      ctx.sender.runCommand(`gamemode c`);\n      ctx.sender.runCommand(`event entity @s removeSpectator`);\n      ctx.sender.removeTag(`spectator`);\n    } else {\n      ctx.sender.runCommand(`gamemode spectator`);\n      ctx.sender.runCommand(`event entity @s addSpectator`);\n      ctx.sender.addTag(`spectator`);\n    }\n  }\n);\n", "import { TABLES } from \"../../index.js\";\nimport { Command } from \"../../lib/Commands/Command.js\";\nimport { getRole } from \"../../utils.js\";\n\nnew Command({\n  name: \"unban\",\n  description: \"Unban a banned player\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n})\n  .addOption(\"playerName\", \"string\", \"Player to ban\")\n    // @ts-ignore\n  .executes((ctx, { playerName }) => {\n    const banData = TABLES.bans.values().find((ban) => ban.player == playerName);\n    if (!banData) return ctx.reply(`${playerName} is not banned`);\n    TABLES.bans.delete(banData.key);\n    ctx.reply(`\u00A7a${playerName}\u00A7r has been Unbanned!`);\n  });\n", "import { TABLES } from \"../../index.js\";\nimport { Command } from \"../../lib/Commands/Command.js\";\nimport { getRole } from \"../../utils.js\";\n\nnew Command({\n  name: \"unfreeze\",\n  description: \"Unfreeze a frozen player\",\n  hasPermission: (player) => getRole(player) == \"admin\",\n})\n  .addOption(\"playerName\", \"string\", \"Player to unfreeze\")\n    // @ts-ignore\n  .executes((ctx, { playerName }) => {\n    const freeze = TABLES.freezes.values().find((freze) => freze.player == playerName);\n    if (!freeze) return ctx.reply(`${playerName} is not frozen`);\n\n    TABLES.freezes.delete(freeze.key);\n    ctx.reply(`\u00A7a${playerName}\u00A7r has been UnFrozen!`);\n  });\n", "import { TABLES } from \"../../index.js\";\nimport { Command } from \"../../lib/Commands/Command.js\";\nimport { getRole } from \"../../utils.js\";\n\nnew Command({\n  name: \"unmute\",\n  description: \"Unmutes a muted player\",\n  hasPermission: (player) => [\"admin\", \"moderator\"].includes(getRole(player)),\n})\n  .addOption(\"playerName\", \"string\", \"Player to unfreeze\")\n    // @ts-ignore\n  .executes((ctx, { playerName }) => {\n    const mute = TABLES.mutes.values().find((mute) => mute.player == playerName);\n    if (!mute) return ctx.reply(`${playerName} is not muted!`);\n\n    TABLES.mutes.delete(mute.player);\n    try {\n      ctx.sender.runCommand(`ability \"${playerName}\" mute false`);\n    } catch (error) {}\n    ctx.reply(`\u00A7a${playerName}\u00A7r has been UnMuted!`);\n  });\n", "/*\n|--------------------------------------------------------------------------\n| Version\n|--------------------------------------------------------------------------\n|\n| This is the version of rubedo recomended to NOT CHANGE could cause bugs.\n|\n*/\nexport const VERSION = \"2.4.0\";\n\n/*\n|--------------------------------------------------------------------------\n| Game Version\n|--------------------------------------------------------------------------\n|\n| This is the version of minecraft that this version of rubedo\n| was made for its a simple constant to tell creators what version\n| this gametest api is supposed to work perfectly for.\n|\n*/\nexport const GAME_VERSION = \"1.19.21\";\n\n/*\n|--------------------------------------------------------------------------\n| Appeal Link\n|--------------------------------------------------------------------------\n|\n| This is the appeal link that gets showed when someone gets banned\n| this link pops up at the bottom of the ban message to show\n| where they can appeal there ban.\n|\n*/\nexport const APPEAL_LINK = \"https://discord.gg/dMa3A5UYKX\";\n", "import { Command } from \"../../lib/Commands/Command.js\";\nimport { VERSION } from \"../../config/app\";\n\nnew Command(\n  {\n    name: \"version\",\n    description: \"Get Current Version\",\n    aliases: [\"v\"],\n  },\n  (ctx) => {\n    ctx.reply(`Current Rubedo Version: ${VERSION}`);\n  }\n);\n", "import { APPEAL_LINK } from \"../../config/app.js\";\nimport { TABLES } from \"../../index.js\";\nimport { kick, forEachValidPlayer, getId, MS } from \"../../utils.js\";\n\nforEachValidPlayer((player) => {\n  const uid = getId(player);\n  const banData = TABLES.bans.get(uid);\n  if (!banData) return;\n  if (banData.expire && banData.expire < Date.now())\n    return TABLES.bans.delete(uid);\n  kick(\n    player,\n    [\n      `\u00A7cYou have been banned!`,\n      `\u00A7aReason: \u00A7f${banData.reason}`,\n      `\u00A7fExpiry: \u00A7b${banData.expire ? MS(banData.length) : \"Forever\"}`,\n      `\u00A7fAppeal at: \u00A7b${TABLES.config.get(\"appealLink\") ?? APPEAL_LINK}`,\n    ],\n    () => {\n      TABLES.bans.delete(uid);\n    }\n  );\n}, 20);\n", "import { Location, world } from \"mojang-minecraft\";\nimport { TABLES } from \"../../index.js\";\nimport { forEachValidPlayer, getId } from \"../../utils.js\";\n\nforEachValidPlayer((player) => {\n  const freezeData = TABLES.freezes.get(getId(player));\n  if (!freezeData) return;\n  player.teleport(\n    new Location(\n      freezeData.location.x,\n      freezeData.location.y,\n      freezeData.location.z\n    ),\n    world.getDimension(freezeData.location.dimension),\n    0,\n    0\n  );\n}, 20);\n", "import { world } from \"mojang-minecraft\";\nimport { TABLES } from \"../../index.js\";\nimport { PREFIX } from \"../../config/commands.js\";\nimport { getId } from \"../../utils.js\";\nimport { Mute } from \"../models/Mute.js\";\nimport { text } from \"../../lang/text.js\";\n\nworld.events.beforeChat.subscribe((data) => {\n  if (data.message.startsWith(PREFIX)) return;\n  const muteData = Mute.getMuteData(data.sender);\n  if (!muteData) return;\n  if (muteData.expire && muteData.expire < Date.now())\n    return TABLES.mutes.delete(getId(data.sender));\n  data.cancel = true;\n  data.sender.tell(text[\"modules.managers.mute.isMuted\"]());\n});\n", "import {\n  BlockLocation,\n  Location,\n  Player,\n  Vector,\n  world,\n} from \"mojang-minecraft\";\nimport { Region } from \"../models/Region.js\";\nimport { forEachValidPlayer, getRole, loadRegionDenys } from \"../../utils.js\";\nimport { setTickInterval } from \"../../lib/Scheduling/utils.js\";\nimport { BLOCK_CONTAINERS, DOORS_SWITCHES } from \"../../config/region.js\";\n\n/**\n * Sets Deny blocks at bottom of region every 5 mins\n */\nsetTickInterval(() => {\n  loadRegionDenys();\n}, 6000);\n\n/**\n * Permissions for region\n */\nworld.events.beforeItemUseOn.subscribe((data) => {\n  if ([\"moderator\", \"admin\"].includes(getRole(data.source as Player))) return;\n  const region = Region.blockLocationInRegion(\n    data.blockLocation,\n    data.source.dimension.id\n  );\n  if (!region) return;\n  const block = data.source.dimension.getBlock(data.blockLocation);\n  if (DOORS_SWITCHES.includes(block.id) && region.permissions.doorsAndSwitches)\n    return;\n  if (BLOCK_CONTAINERS.includes(block.id) && region.permissions.openContainers)\n    return;\n  data.cancel = true;\n});\n\nworld.events.beforeExplosion.subscribe((data) => {\n  for (let i = 0; i < data.impactedBlocks.length; i++) {\n    const bL = data.impactedBlocks[i];\n    let region = Region.blockLocationInRegion(bL, data.dimension.id);\n    if (region) return (data.cancel = true);\n  }\n});\n\nworld.events.entityCreate.subscribe((data) => {\n  const region = Region.blockLocationInRegion(\n    new BlockLocation(\n      data.entity.location.x,\n      data.entity.location.y,\n      data.entity.location.z\n    ),\n    data.entity.dimension.id\n  );\n  if (!region) return;\n  if (region.permissions.allowedEntitys.includes(data.entity.id)) return;\n  data.entity.teleport({ x: 0, y: -64, z: 0 }, data.entity.dimension, 0, 0);\n  data.entity.kill();\n});\n\nsetTickInterval(() => {\n  for (const region of Region.getAllRegions()) {\n    for (const entity of world\n      .getDimension(region.dimensionId)\n      .getEntities({ excludeTypes: region.permissions.allowedEntitys })) {\n      if (!region.entityInRegion(entity)) continue;\n      entity.teleport({ x: 0, y: -64, z: 0 }, entity.dimension, 0, 0);\n      entity.kill();\n    }\n  }\n}, 100);\n\n/**\n * Gives player a tag if they are in a region\n */\nforEachValidPlayer((player) => {\n  for (const region of Region.getAllRegions()) {\n    if (region.entityInRegion(player)) {\n      player.addTag(`inRegion`);\n      if (!region.permissions.pvp) player.addTag(`region-protected`);\n    } else {\n      player.removeTag(`inRegion`);\n      player.removeTag(`region-protected`);\n    }\n  }\n}, 5);\n", "import { world } from \"mojang-minecraft\";\nimport { Mute } from \"../models/Mute\";\n\nconst OVERWORLD = world.getDimension(\"overworld\");\n\nworld.events.playerJoin.subscribe(({ player }) => {\n  let e = world.events.tick.subscribe((data) => {\n    try {\n      OVERWORLD.runCommand(`testfor @a[name=\"${player.name}\"]`);\n      world.events.tick.unsubscribe(e);\n      if (Mute.getMuteData(player)) player.runCommand(`ability @s mute true`);\n    } catch (error) {}\n  });\n});\n"],
  "mappings": "AAGO,IAAMA,GAAe,CAC1B,oBACA,oBACA,iCACA,6BACA,4BACA,4BACA,kBACA,2BACA,8BACA,oBACA,2BACA,oBACA,oBACA,0BACA,oBACA,qBACA,0BACA,oBACA,gCACA,4BACA,mCACA,4BACA,yBACA,8BACA,0BACA,mBACA,oBACA,0BACA,kCACA,uBACA,yCACA,gCACA,0BACA,4BACA,8BACA,6CACA,0CACA,uBACA,0BACA,0BACA,6BACA,6BACA,0BACA,mCACA,qBACA,4BACA,0BACA,8BACA,gCACA,kCACA,8BACA,kCACA,8BACA,uCACA,wBACA,wCACA,uCACA,iBACA,8BACA,6BACA,mCACA,+BACA,8BACA,qCACA,wBACA,uBACA,6BACA,+BACA,gCACA,6BACA,2CACA,iBACA,yBACA,0BACA,0BACA,2BACA,wBACA,4BACA,iCACA,uBACA,4BACA,2BACA,+BACA,uBACA,4BACA,+BACA,oCACA,6BACA,4BACA,2BACA,qBACA,wBACA,yBACA,8BACA,6BACA,6BACA,qBACA,0BACA,4BACA,sBACA,0BACA,0BACA,uBACA,8BACA,+BACA,4BACA,uBACA,4BACA,wBACA,2BACA,6BACA,sBACA,gCACA,6BACA,uBACA,uBACA,+BACA,6BACA,6BACA,uBACA,6BACA,mBACA,iCACA,6BACA,iBACA,0BACA,wBACA,8BACA,uCACA,wBACA,8BACA,6BACA,uBACA,4BACA,iCACA,qBACA,uBACA,wBACA,gCACA,wBACA,yBACA,wBACA,2BACA,0BACA,sBACA,0BACA,6BACA,4CACA,4BACA,6BACA,8BACA,0BACA,mCACA,6BACA,+BACA,iCACA,iCACA,+BACA,iCACA,kDACA,4CACA,2CACA,mBACA,qBACA,wBACA,+BACA,+BACA,6BACA,8BACA,iCACA,yBACA,6BACA,6BACA,8BACA,mCACA,oCACA,oCACA,oCACA,0BACA,oCACA,sBACA,sBACA,sBACA,0BACA,6BACA,iCACA,4BACA,8BACA,iCACA,qCACA,+BACA,4BACA,sBACA,sBACA,qBACA,sBACA,sB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",
  "names": ["BANNED_ITEMS", "BANNED_BLOCKS", "BLOCK_CONTAINERS", "CHECK_SIZE", "OBJECTIVES", "BlockInventory", "inventory", "i", "block", "BlockLocation", "ItemStack", "MinecraftItemTypes", "world", "world", "text", "a", "b", "playerName", "length", "unit", "reason", "world", "chunkString", "str", "length", "runCommand", "command", "dimension", "textToBinary", "text", "char", "binaryToText", "binary", "BlockLocation", "world", "MAX_DATABASE_STRING_SIZE", "ENTITY_SPAWN_DIMENSION", "world", "ENTITY_SPAWN_LOCATION", "BlockLocation", "Database", "TABLE_NAME", "text", "i", "name", "regex", "RAW_TABLE_DATA", "objective", "runCommand", "world", "command", "value", "index", "data", "a", "binaryToText", "json", "SPLIT_DATA", "chunkString", "MAX_DATABASE_STRING_SIZE", "chunk", "textToBinary", "key", "status", "world", "TIMEOUTS", "Timeout", "callback", "tick", "loop", "id", "currentTick", "sleep", "tick", "resolve", "setTickTimeout", "callback", "Timeout", "setTickInterval", "world", "PREFIX", "CommandCallback", "data", "args", "text", "command", "arg", "item", "BlockLocation", "world", "parseLocationAugs", "x", "y", "z", "location", "viewVector", "a", "arg", "r", "b", "index", "fetch", "playerName", "plr", "DefaultType", "value", "IntegerOption", "FloatOption", "LocationOption", "BooleanOption", "PlayerOption", "fetch", "TargetOption", "ArrayOption", "types", "OptionTypes", "CommandOption", "name", "type", "description", "optional", "value", "OptionTypes", "DEFAULT_HAS_PERMISSION", "player", "getChatCommand", "data", "args", "getChatAugments", "checker", "arr", "target", "v", "index", "command", "cmds", "COMMAND_PATHS", "aliase", "p", "a", "cmd", "path", "pathA", "PREFIX", "Command", "CommandInfo", "callback", "SubCommandInfo", "newPath", "name", "type", "description", "optional", "CommandOption", "options", "option", "parseLocationAugs", "CommandCallback", "COMMAND_PATHS", "world", "data", "PREFIX", "args", "getChatAugments", "command", "getChatCommand", "tag", "el", "index", "option", "error", "world", "GUI_ITEM", "ENTITY_INVENTORY", "DEFAULT_STATIC_PAGE_ID", "world", "PAGES", "DefaultFill", "entity", "page", "extras", "container", "slot", "AIR", "getItemUid", "item", "uid", "id", "nameTag", "amount", "data", "Page", "size", "fillType", "DefaultFill", "PAGES", "slot", "action", "i", "button", "ItemGrabbedCallback", "gui", "slot", "change", "text", "item", "db", "page", "extras", "amount", "pageID", "form", "sleep", "world", "clearPlayersPointer", "player", "ItemToClear", "inventory", "itemsToLoad", "item", "error", "getItemAtSlot", "entity", "slot", "getEntitys", "type", "entitys", "dimension", "e", "getHeldItem", "CURRENT_GUIS", "ChestGUI", "entity", "gui", "oldInv", "newInv", "i", "player", "world", "loop", "change", "error", "playerName", "data", "getEntitys", "ENTITY_INVENTORY", "e", "DEFAULT_STATIC_PAGE_ID", "key", "id", "extras", "page", "PAGES", "text", "container", "inventory", "currentItem", "getItemUid", "slot", "clearPlayersPointer", "getItemAtSlot", "ItemGrabbedCallback", "callback", "Items", "ItemStack", "MinecraftEnchantmentTypes", "Item", "item", "extras", "enchantments", "ItemStackEnchantments", "Enchantment", "id", "amount", "data", "components", "itemStack", "ench", "BackButton", "Item", "ctx", "CloseGuiButton", "HOME_PAGE", "Page", "DefaultFill", "Item", "ctx", "CloseGuiButton", "world", "BlockLocation", "MinecraftBlockTypes", "STAFF_SCOREBOARD", "STAFF_DB_SCORES", "DEFAULT_REGION_PERMISSIONS", "DOORS_SWITCHES", "BLOCK_CONTAINERS", "REGIONS", "REGIONS_HAVE_BEEN_GRABBED", "LOWEST_Y_VALUE", "HIGEST_Y_VALUE", "betweenXYZ", "XYZa", "XYZb", "XYZc", "c", "Region", "regions", "TABLES", "region", "r", "blockLocation", "dimensionId", "from", "to", "permissions", "key", "DEFAULT_REGION_PERMISSIONS", "loadRegionDenys", "entity", "value", "kick", "player", "message", "onFail", "error", "getScore", "entity", "objective", "world", "setScore", "entityName", "value", "getRole", "score", "STAFF_SCOREBOARD", "STAFF_DB_SCORES", "setRole", "playerName", "num", "key", "loadRegionDenys", "region", "Region", "loc1", "BlockLocation", "loc2", "blockLocation", "MinecraftBlockTypes", "CALLBACKS", "forEachValidPlayer", "callback", "delay", "world", "tick", "players", "i", "player", "getRole", "CALLBACK", "CALLBACKS", "getId", "entity", "MS", "value", "compactDuration", "fullDuration", "avoidDuration", "durations", "a", "b", "toMS", "toDuration", "text", "err", "message", "isError", "number", "absMs", "mappedDuration", "obj", "v", "error", "world", "player", "getRole", "getHeldItem", "GUI_ITEM", "CURRENT_GUIS", "ChestGUI", "gui", "Ban", "player", "length", "unit", "reason", "by", "MS", "data", "getId", "TABLES", "Command", "player", "getRole", "ctx", "length", "unit", "reason", "Ban", "text", "ENCHANTMENTS", "config", "Command", "player", "getRole", "banned", "bannedItems", "ctx", "item", "items", "TABLES", "BANNED_ITEMS", "p", "bannedBlocks", "block", "blocks", "BANNED_BLOCKS", "enchantments", "ENCHANTMENTS", "enchantment", "level", "enchants", "link", "dbcm", "Command", "player", "getRole", "ctx", "table", "key", "data", "TABLES", "error", "value", "Command", "player", "getRole", "ctx", "i", "Freeze", "player", "reason", "data", "getId", "TABLES", "Command", "player", "getRole", "ctx", "reason", "Freeze", "Command", "ctx", "COMMAND_PATHS", "ALL_COMMANDS", "command", "page", "maxPages", "arg", "cmd", "c", "options", "option", "Mute", "player", "TABLES", "getId", "length", "unit", "reason", "by", "msLength", "MS", "data", "Command", "player", "getRole", "ctx", "length", "unit", "reason", "Mute", "Command", "player", "getRole", "ctx", "NPC_LOCATIONS", "world", "Command", "ctx", "pingTick", "deltaTime", "BlockLocation", "command", "Command", "player", "getRole", "ctx", "from_x", "from_z", "to_x", "to_z", "Region", "loc", "BlockLocation", "r", "regions", "region", "permission", "key", "value", "entityCommands", "entity", "currentAllowedEntitys", "v", "main", "Command", "player", "getRole", "ctx", "playerName", "role", "setRole", "Command", "player", "getRole", "ctx", "Command", "player", "getRole", "ctx", "playerName", "banData", "TABLES", "ban", "Command", "player", "getRole", "ctx", "playerName", "freeze", "TABLES", "freze", "Command", "player", "getRole", "ctx", "playerName", "mute", "TABLES", "VERSION", "APPEAL_LINK", "Command", "ctx", "VERSION", "forEachValidPlayer", "player", "uid", "getId", "banData", "TABLES", "kick", "MS", "APPEAL_LINK", "Location", "world", "forEachValidPlayer", "player", "freezeData", "TABLES", "getId", "Location", "world", "world", "world", "data", "PREFIX", "muteData", "Mute", "TABLES", "getId", "text", "BlockLocation", "world", "setTickInterval", "loadRegionDenys", "world", "data", "getRole", "region", "Region", "block", "DOORS_SWITCHES", "BLOCK_CONTAINERS", "i", "bL", "BlockLocation", "entity", "forEachValidPlayer", "player", "world", "OVERWORLD", "world", "player", "data", "Mute", "TABLES", "Database", "CONTAINER_LOCATIONS", "NPC_LOCATIONS", "AIR", "ItemStack", "MinecraftItemTypes", "locationToBlockLocation", "loc", "BlockLocation", "setTickInterval", "player", "world", "blockLoc", "pos1", "CHECK_SIZE", "pos2", "location", "block", "BLOCK_CONTAINERS", "BlockInventory", "objective", "OBJECTIVES"]
}
